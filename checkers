└── client
    ├── .gitignore
    ├── README.md
    ├── dojoConfig.ts
    ├── eslint.config.js
    ├── index.html
    ├── package.json
    ├── pnpm-lock.yaml
    ├── postcss.config.js
    ├── src
        ├── DojoContext.tsx
        ├── assets
        │   ├── BackgrounCheckers.png
        │   ├── Board.png
        │   ├── ButtonCreate.png
        │   ├── Cartridge.png
        │   ├── Checkers.png
        │   ├── ChoicePlayer.png
        │   ├── ConfirmJoin.png
        │   ├── ConnectWallet.png
        │   ├── ConnectWallet.svg
        │   ├── CreateGame.png
        │   ├── CreateGame2.png
        │   ├── GameOver1.png
        │   ├── GameOver2.png
        │   ├── InitGameBackground.png
        │   ├── JoinGame.png
        │   ├── JoinGame2.png
        │   ├── JoinGameRectangule.png
        │   ├── LoadingCreate.png
        │   ├── LogoMarquis.png
        │   ├── PieceBlack.svg
        │   ├── PieceOrange.svg
        │   ├── Player1.png
        │   ├── Player1_0.png
        │   ├── Player2.png
        │   ├── Player2_0.png
        │   ├── Player3_0.png
        │   ├── Player4_0.png
        │   ├── QueenBlack.png
        │   ├── QueenOrange.png
        │   ├── Return.png
        │   ├── SelectPlayer.png
        │   ├── Title.png
        │   ├── TotalPiece.png
        │   ├── Winner1.png
        │   ├── Winner2.png
        │   └── Witch.png
        ├── bindings.ts
        ├── components
        │   ├── CaptureMove.tsx
        │   ├── Checker.tsx
        │   ├── CreateGame.tsx
        │   ├── GameOver.tsx
        │   ├── Home.tsx
        │   ├── InitGame.tsx
        │   ├── InitPieces.tsx
        │   ├── JoinRoom.tsx
        │   ├── QueenPiece.tsx
        │   └── Winner.tsx
        ├── connector
        │   ├── ControllerButton.tsx
        │   └── CreateBurner.tsx
        ├── contracts.gen.ts
        ├── hooks
        │   ├── useDojo.tsx
        │   ├── useDojoConnect.tsx
        │   ├── useModel.tsx
        │   └── useSystemCalls.ts
        ├── index.css
        ├── main.tsx
        ├── models.gen.ts
        ├── providers
        │   └── StarknetProvider.tsx
        ├── test-query.ts
        └── vite-env.d.ts
    ├── tailwind.config.js
    ├── tsconfig.app.json
    ├── tsconfig.app.tsbuildinfo
    ├── tsconfig.json
    ├── tsconfig.node.json
    ├── tsconfig.node.tsbuildinfo
    └── vite.config.ts


/client/.gitignore:
--------------------------------------------------------------------------------
 1 | # Logs
 2 | logs
 3 | *.log
 4 | npm-debug.log*
 5 | yarn-debug.log*
 6 | yarn-error.log*
 7 | pnpm-debug.log*
 8 | lerna-debug.log*
 9 | 
10 | node_modules
11 | dist
12 | dist-ssr
13 | *.local
14 | 
15 | # Editor directories and files
16 | .vscode/*
17 | !.vscode/extensions.json
18 | .idea
19 | .DS_Store
20 | *.suo
21 | *.ntvs*
22 | *.njsproj
23 | *.sln
24 | *.sw?
25 | 


--------------------------------------------------------------------------------
/client/README.md:
--------------------------------------------------------------------------------
 1 | # React + TypeScript + Vite
 2 | 
 3 | This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
 4 | 
 5 | Currently, two official plugins are available:
 6 | 
 7 | -   [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
 8 | -   [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
 9 | 
10 | ## Expanding the ESLint configuration
11 | 
12 | If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:
13 | 
14 | -   Configure the top-level `parserOptions` property like this:
15 | 
16 | ```js
17 | export default tseslint.config({
18 |     languageOptions: {
19 |         // other options...
20 |         parserOptions: {
21 |             project: ["./tsconfig.node.json", "./tsconfig.app.json"],
22 |             tsconfigRootDir: import.meta.dirname,
23 |         },
24 |     },
25 | });
26 | ```
27 | 
28 | -   Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`
29 | -   Optionally add `...tseslint.configs.stylisticTypeChecked`
30 | -   Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:
31 | 
32 | ```js
33 | // eslint.config.js
34 | import react from "eslint-plugin-react";
35 | 
36 | export default tseslint.config({
37 |     // Set the react version
38 |     settings: { react: { version: "18.3" } },
39 |     plugins: {
40 |         // Add the react plugin
41 |         react,
42 |     },
43 |     rules: {
44 |         // other rules...
45 |         // Enable its recommended rules
46 |         ...react.configs.recommended.rules,
47 |         ...react.configs["jsx-runtime"].rules,
48 |     },
49 | });
50 | ```
51 | 


--------------------------------------------------------------------------------
/client/dojoConfig.ts:
--------------------------------------------------------------------------------
1 | import { createDojoConfig } from "@dojoengine/core";
2 | 
3 | import manifest from "../dojo-starter/manifest_dev.json";
4 | 
5 | export const dojoConfig = createDojoConfig({
6 |     manifest,
7 |     toriiUrl: "http://localhost:8080",
8 | });
9 | 


--------------------------------------------------------------------------------
/client/eslint.config.js:
--------------------------------------------------------------------------------
 1 | import js from "@eslint/js";
 2 | import reactHooks from "eslint-plugin-react-hooks";
 3 | import reactRefresh from "eslint-plugin-react-refresh";
 4 | import globals from "globals";
 5 | import tseslint from "typescript-eslint";
 6 | 
 7 | export default tseslint.config(
 8 |     { ignores: ["dist"] },
 9 |     {
10 |         extends: [js.configs.recommended, ...tseslint.configs.recommended],
11 |         files: ["**/*.{ts,tsx}"],
12 |         languageOptions: {
13 |             ecmaVersion: 2020,
14 |             globals: globals.browser,
15 |         },
16 |         plugins: {
17 |             "react-hooks": reactHooks,
18 |             "react-refresh": reactRefresh,
19 |         },
20 |         rules: {
21 |             ...reactHooks.configs.recommended.rules,
22 |             "react-refresh/only-export-components": [
23 |                 "warn",
24 |                 { allowConstantExport: true },
25 |             ],
26 |         },
27 |     }
28 | );
29 | 


--------------------------------------------------------------------------------
/client/index.html:
--------------------------------------------------------------------------------
 1 | <!doctype html>
 2 | <html lang="en">
 3 |     <head>
 4 |         <meta charset="UTF-8" />
 5 |         <link rel="icon" type="image/svg+xml" href="/vite.svg" />
 6 |         <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 7 |         <title>Vite + React + TS</title>
 8 |     </head>
 9 |     <body>
10 |         <div id="root"></div>
11 |         <script type="module" src="/src/main.tsx"></script>
12 |     </body>
13 | </html>
14 | 


--------------------------------------------------------------------------------
/client/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "dojo-chekers",
 3 |   "private": true,
 4 |   "version": "0.0.0",
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "vite",
 8 |     "build": "tsc -b && vite build",
 9 |     "lint": "eslint .",
10 |     "preview": "vite preview"
11 |   },
12 |   "dependencies": {
13 |     "@cartridge/connector": "^0.5.7",
14 |     "@cartridge/controller": "^0.5.7",
15 |     "@dojoengine/core": "1.0.0-alpha.24",
16 |     "@dojoengine/create-burner": "1.0.0-alpha.24",
17 |     "@dojoengine/sdk": "1.0.0-alpha.24",
18 |     "@dojoengine/torii-client": "1.0.0-alpha.24",
19 |     "@dojoengine/torii-wasm": "1.0.0-alpha.24",
20 |     "@dojoengine/utils": "1.0.0-alpha.24",
21 |     "@starknet-react/core": "^3.0.3",
22 |     "@starknet-react/chains": "^3.1.0",
23 |     "@types/uuid": "^10.0.0",
24 |     "immer": "^10.1.1",
25 |     "react": "^18.3.1",
26 |     "react-dom": "^18.3.1",
27 |     "react-router-dom": "^6.27.0",
28 |     "starknet": "6.11.0",
29 |     "uuid": "^10.0.0",
30 |     "vite-plugin-mkcert": "^1.17.6",
31 |     "vite-plugin-top-level-await": "^1.4.4",
32 |     "vite-plugin-wasm": "^3.3.0",
33 |     "zustand": "^4.5.5"
34 |   },
35 |   "devDependencies": {
36 |     "@eslint/js": "^9.11.1",
37 |     "@types/react": "^18.3.9",
38 |     "@types/react-dom": "^18.3.0",
39 |     "@vitejs/plugin-react": "^4.3.1",
40 |     "autoprefixer": "^10.4.20",
41 |     "eslint": "^9.11.1",
42 |     "eslint-plugin-react-hooks": "5.1.0-rc-fb9a90fa48-20240614",
43 |     "eslint-plugin-react-refresh": "^0.4.12",
44 |     "globals": "^15.9.0",
45 |     "postcss": "^8.4.47",
46 |     "tailwindcss": "^3.4.13",
47 |     "typescript": "^5.6.2",
48 |     "typescript-eslint": "^8.7.0",
49 |     "vite": "^5.4.7"
50 |   }
51 | }


--------------------------------------------------------------------------------
/client/postcss.config.js:
--------------------------------------------------------------------------------
1 | export default {
2 |     plugins: {
3 |         tailwindcss: {},
4 |         autoprefixer: {},
5 |     },
6 | };
7 | 


--------------------------------------------------------------------------------
/client/src/DojoContext.tsx:
--------------------------------------------------------------------------------
 1 | import { createContext, ReactNode, useContext, useMemo } from "react";
 2 | import { BurnerAccount, BurnerManager, useBurnerManager } from "@dojoengine/create-burner";
 3 | import { Account } from "starknet";
 4 | import { dojoConfig } from "../dojoConfig";
 5 | import { DojoProvider } from "@dojoengine/core";
 6 | import { setupWorld } from "./contracts.gen";
 7 | 
 8 | interface DojoContextType {
 9 |     masterAccount: Account;
10 |     setupWorld: ReturnType<typeof setupWorld>;
11 |     account: BurnerAccount;
12 | }
13 | 
14 | export const DojoContext = createContext<DojoContextType | null>(null);
15 | 
16 | export const DojoContextProvider = ({
17 |     children,
18 |     burnerManager,
19 | }: {
20 |     children: ReactNode;
21 |     burnerManager: BurnerManager;
22 | }) => {
23 |     const currentValue = useContext(DojoContext);
24 |     if (currentValue) throw new Error("DojoProvider can only be used once");
25 | 
26 |     const dojoProvider = new DojoProvider(
27 |         dojoConfig.manifest,
28 |         dojoConfig.rpcUrl
29 |     );
30 | 
31 |     const masterAccount = useMemo(
32 |         () => new Account(
33 |             dojoProvider.provider,
34 |             dojoConfig.masterAddress,
35 |             dojoConfig.masterPrivateKey,
36 |             "1"
37 |         ),
38 |         []
39 |     );
40 | 
41 |     const burnerManagerData = useBurnerManager({ burnerManager });
42 | 
43 |     return (
44 |         <DojoContext.Provider
45 |             value={{
46 |                 masterAccount,
47 |                 setupWorld: setupWorld(dojoProvider),
48 |                 account: {
49 |                     ...burnerManagerData,
50 |                     account: burnerManagerData.account || masterAccount,
51 |                 },
52 |             }}
53 |         >
54 |             {children}
55 |         </DojoContext.Provider>
56 |     );
57 | };


--------------------------------------------------------------------------------
/client/src/assets/BackgrounCheckers.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/BackgrounCheckers.png


--------------------------------------------------------------------------------
/client/src/assets/Board.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Board.png


--------------------------------------------------------------------------------
/client/src/assets/ButtonCreate.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/ButtonCreate.png


--------------------------------------------------------------------------------
/client/src/assets/Cartridge.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Cartridge.png


--------------------------------------------------------------------------------
/client/src/assets/Checkers.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Checkers.png


--------------------------------------------------------------------------------
/client/src/assets/ChoicePlayer.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/ChoicePlayer.png


--------------------------------------------------------------------------------
/client/src/assets/ConfirmJoin.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/ConfirmJoin.png


--------------------------------------------------------------------------------
/client/src/assets/ConnectWallet.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/ConnectWallet.png


--------------------------------------------------------------------------------
/client/src/assets/ConnectWallet.svg:
--------------------------------------------------------------------------------
1 | <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
2 | <g id="test 4">
3 | <path id="Vector" d="M21.5 18V19C21.5 19.5304 21.2893 20.0391 20.9142 20.4142C20.5391 20.7893 20.0304 21 19.5 21H5.5C4.39 21 3.5 20.1 3.5 19V5C3.5 4.46957 3.71071 3.96086 4.08579 3.58579C4.46086 3.21071 4.96957 3 5.5 3H19.5C20.0304 3 20.5391 3.21071 20.9142 3.58579C21.2893 3.96086 21.5 4.46957 21.5 5V6H12.5C11.39 6 10.5 6.9 10.5 8V16C10.5 16.5304 10.7107 17.0391 11.0858 17.4142C11.4609 17.7893 11.9696 18 12.5 18M12.5 16H22.5V8H12.5M16.5 13.5C16.1022 13.5 15.7206 13.342 15.4393 13.0607C15.158 12.7794 15 12.3978 15 12C15 11.6022 15.158 11.2206 15.4393 10.9393C15.7206 10.658 16.1022 10.5 16.5 10.5C16.8978 10.5 17.2794 10.658 17.5607 10.9393C17.842 11.2206 18 11.6022 18 12C18 12.3978 17.842 12.7794 17.5607 13.0607C17.2794 13.342 16.8978 13.5 16.5 13.5Z" fill="white"/>
4 | </g>
5 | </svg>
6 | 


--------------------------------------------------------------------------------
/client/src/assets/CreateGame.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/CreateGame.png


--------------------------------------------------------------------------------
/client/src/assets/CreateGame2.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/CreateGame2.png


--------------------------------------------------------------------------------
/client/src/assets/GameOver1.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/GameOver1.png


--------------------------------------------------------------------------------
/client/src/assets/GameOver2.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/GameOver2.png


--------------------------------------------------------------------------------
/client/src/assets/InitGameBackground.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/InitGameBackground.png


--------------------------------------------------------------------------------
/client/src/assets/JoinGame.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/JoinGame.png


--------------------------------------------------------------------------------
/client/src/assets/JoinGame2.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/JoinGame2.png


--------------------------------------------------------------------------------
/client/src/assets/JoinGameRectangule.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/JoinGameRectangule.png


--------------------------------------------------------------------------------
/client/src/assets/LoadingCreate.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/LoadingCreate.png


--------------------------------------------------------------------------------
/client/src/assets/LogoMarquis.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/LogoMarquis.png


--------------------------------------------------------------------------------
/client/src/assets/PieceBlack.svg:
--------------------------------------------------------------------------------
 1 | <svg width="84" height="84" viewBox="0 0 84 84" fill="none" xmlns="http://www.w3.org/2000/svg">
 2 | <g id="Capa_2" clip-path="url(#clip0_36_39)">
 3 | <g id="Group">
 4 | <path id="Vector" d="M41.76 83.52C64.8234 83.52 83.52 64.8234 83.52 41.76C83.52 18.6966 64.8234 0 41.76 0C18.6966 0 0 18.6966 0 41.76C0 64.8234 18.6966 83.52 41.76 83.52Z" fill="url(#paint0_linear_36_39)"/>
 5 | <path id="Vector_2" d="M41.7601 79.34C62.5149 79.34 79.34 62.5149 79.34 41.7601C79.34 21.0052 62.5149 4.18005 41.7601 4.18005C21.0052 4.18005 4.18005 21.0052 4.18005 41.7601C4.18005 62.5149 21.0052 79.34 41.7601 79.34Z" fill="url(#paint1_linear_36_39)"/>
 6 | <path id="Vector_3" d="M41.7599 69.9499C57.3288 69.9499 69.9499 57.3288 69.9499 41.7599C69.9499 26.191 57.3288 13.5699 41.7599 13.5699C26.191 13.5699 13.5699 26.191 13.5699 41.7599C13.5699 57.3288 26.191 69.9499 41.7599 69.9499Z" fill="#333333"/>
 7 | </g>
 8 | <g id="Group_2" filter="url(#filter0_d_36_39)">
 9 | <path id="Vector_4" d="M44.6199 24.34C45.1199 24.11 43.8599 21.65 41.8699 22.46C39.7899 23.3 39.7199 26.21 39.5799 27.67C39.4399 29.12 38.0399 30.6 38.0399 30.6H46.4799C46.4799 30.6 45.0299 29.5 44.4899 27.66C43.9399 25.82 43.9899 24.64 44.6299 24.34H44.6199Z" fill="#689324"/>
10 | <path id="Vector_5" d="M40.9199 25.05C41.2299 24.17 42.4399 23.14 43.3199 22.43C42.8999 22.27 42.4199 22.24 41.8699 22.46C41.8699 22.46 41.8099 22.49 41.7799 22.51C41.7699 22.51 41.7599 22.52 41.7499 22.53C41.5999 22.6 41.4599 22.68 41.3299 22.78C40.8099 23.15 40.4599 23.67 40.2099 24.26C40.2099 24.27 40.1999 24.29 40.1899 24.3C40.1399 24.43 40.0899 24.57 40.0399 24.7C40.0399 24.71 40.0399 24.73 40.0299 24.74C39.9399 25.04 39.8699 25.36 39.8099 25.66C39.7799 25.84 39.7499 26.02 39.7299 26.2V26.23C39.6799 26.61 39.6399 26.97 39.6199 27.29C39.6199 27.38 39.5999 27.47 39.5999 27.55C39.5999 27.58 39.5999 27.62 39.5999 27.66C39.5799 27.82 39.5499 27.98 39.5099 28.14C39.5099 28.15 39.5099 28.16 39.5099 28.18C39.5099 28.18 39.5099 28.18 39.5099 28.19C39.4899 28.27 39.4499 28.35 39.4299 28.43C39.3999 28.5 39.3799 28.58 39.3499 28.65C39.3499 28.66 39.3499 28.67 39.3399 28.68C39.2999 28.78 39.2499 28.87 39.2099 28.96C39.1799 29.03 39.1399 29.1 39.1099 29.16C39.0599 29.25 39.0199 29.33 38.9699 29.41C38.9499 29.45 38.9199 29.49 38.8999 29.53H39.7799C39.7799 29.53 40.4199 26.62 40.9799 25.04L40.9199 25.05Z" fill="#87B236"/>
11 | <path id="Vector_6" d="M24.48 56.17C27.47 59.17 29.16 58.19 29.16 58.19C33.27 61.22 37.04 59.44 37.04 59.44C37.97 61.56 41.98 61.19 41.98 61.19C41.98 61.19 45.99 61.55 46.91 59.43C46.91 59.43 51.12 61.49 53.84 58.77C53.84 58.77 55.84 60.09 58.82 57.09C62.0099 53.88 60.58 44.24 58.56 37.92C56.55 31.6 52.47 31.63 52.47 31.63C52.47 31.63 51.58 30.35 49.41 29.78C46.78 29.09 45.5 29.9 45.5 29.9C45.5 29.9 44.5 28.48 41.72 28.48C38.94 28.48 38.15 29.66 38.15 29.66C38.15 29.66 37.1 29.15 35.13 29.83C33.01 30.56 31.4 31.16 31.4 31.16C31.4 31.16 27.31 31.62 25.31 37.94C23.31 44.26 21.26 52.96 24.46 56.17H24.48Z" fill="#F6921E"/>
12 | <path id="Vector_7" d="M58.57 37.92C56.56 31.6 52.48 31.63 52.48 31.63C52.48 31.63 51.59 30.35 49.42 29.78C46.79 29.09 45.51 29.9 45.51 29.9C45.51 29.9 44.51 28.48 41.73 28.48C38.95 28.48 38.16 29.66 38.16 29.66C38.16 29.66 37.11 29.15 35.14 29.83C33.02 30.56 31.41 31.16 31.41 31.16C31.41 31.16 27.32 31.62 25.32 37.94C25.08 38.7 24.84 39.49 24.61 40.3C25.52 39.35 27.58 37.23 27.93 37.11C28.38 36.96 29.77 37.18 30.03 35.38C30.29 33.58 32.09 32.15 32.09 32.15C30.99 34.12 31.04 35.94 31.04 35.94C31.04 35.94 33.29 34.66 34.19 35.22C35.09 35.78 36.41 41.72 36.41 41.72C36.41 41.72 36.56 36.46 37 34.32C37.45 32.18 38.42 30.56 38.42 30.56C37.42 33.09 37.67 35.74 37.67 35.74C37.67 35.74 40.71 34.05 42.59 35.25C44.47 36.45 46.65 41.48 46.65 41.48C46.65 36.22 46.15 31.79 46.15 31.79C46.98 33.48 47.13 35.32 47.13 35.32C51.34 37.04 54.77 45.04 54.77 45.04C54.91 38.32 52.88 33.25 52.88 33.25C52.88 33.25 53.56 33.29 55.1 34.6C56.22 35.56 58.22 38.68 59.23 40.31C59.01 39.47 58.78 38.66 58.54 37.9L58.57 37.92Z" fill="#FCA659"/>
13 | <path id="Vector_8" d="M48.17 48.98V50.91C48.17 51.19 47.98 51.43 47.7 51.49L45.76 51.9C45.39 51.98 45.05 51.7 45.05 51.32V49.85C44.06 50.04 43.03 50.16 41.94 50.17C40.86 50.17 39.82 50.04 38.83 49.86V51.33C38.83 51.7 38.49 51.99 38.12 51.91L36.18 51.5C35.91 51.44 35.71 51.2 35.71 50.92V48.99C32.55 47.83 30.49 46.24 30.49 46.24C32.89 54.61 37.68 55.31 41.93 55.43C46.18 55.3 50.97 54.6 53.36 46.22C53.36 46.22 51.31 47.82 48.15 48.98H48.17Z" fill="#CC7221"/>
14 | <path id="Vector_9" d="M38.13 53.26L36.19 52.85C35.92 52.79 35.72 52.55 35.72 52.27V50.92V50.34C33.55 49.54 31.92 48.55 31.1 48C33.64 54.7 38.02 55.31 41.95 55.43C45.87 55.31 50.26 54.69 52.79 47.98C51.97 48.53 50.35 49.53 48.17 50.33V50.91V52.26C48.17 52.54 47.98 52.78 47.7 52.84L45.76 53.25C45.39 53.33 45.05 53.05 45.05 52.67V51.32V51.2C44.07 51.39 43.03 51.51 41.94 51.52C40.86 51.52 39.82 51.39 38.83 51.21V51.33V52.68C38.83 53.05 38.49 53.33 38.12 53.26H38.13Z" fill="#1A1A1A"/>
15 | <path id="Vector_10" d="M38.89 39.43C38.89 41.38 37.31 42.96 35.36 42.96C33.41 42.96 31.83 41.38 31.83 39.43C31.83 37.48 33.41 35.9 35.36 35.9C37.31 35.9 38.89 37.48 38.89 39.43Z" fill="#BF6710"/>
16 | <path id="Vector_11" d="M35.32 37.8C33.73 37.8 32.39 38.85 31.95 40.3C32.34 41.83 33.7199 42.97 35.3699 42.96C36.9599 42.96 38.3 41.91 38.74 40.46C38.35 38.93 36.97 37.79 35.32 37.8Z" fill="#1A1A1A"/>
17 | <path id="Vector_12" d="M51.9 39.41C51.9 41.36 50.32 42.94 48.37 42.94C46.42 42.94 44.84 41.36 44.84 39.41C44.84 37.46 46.42 35.88 48.37 35.88C50.32 35.88 51.9 37.46 51.9 39.41Z" fill="#BF6710"/>
18 | <path id="Vector_13" d="M48.32 37.78C46.73 37.78 45.39 38.83 44.95 40.28C45.34 41.81 46.7199 42.95 48.3699 42.94C49.9599 42.94 51.3 41.89 51.74 40.44C51.35 38.91 49.97 37.77 48.32 37.78Z" fill="#1A1A1A"/>
19 | </g>
20 | </g>
21 | <defs>
22 | <filter id="filter0_d_36_39" x="17.1353" y="10.967" width="71.8978" height="72.9177" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
23 | <feFlood flood-opacity="0" result="BackgroundImageFix"/>
24 | <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
25 | <feOffset dx="11.34" dy="5.67"/>
26 | <feGaussianBlur stdDeviation="8.5"/>
27 | <feColorMatrix type="matrix" values="0 0 0 0 0.898039 0 0 0 0 0.764706 0 0 0 0 0.603922 0 0 0 0.15 0"/>
28 | <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_36_39"/>
29 | <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_36_39" result="shape"/>
30 | </filter>
31 | <linearGradient id="paint0_linear_36_39" x1="-10.97" y1="9.41" x2="79.73" y2="65.05" gradientUnits="userSpaceOnUse">
32 | <stop stop-color="#999999"/>
33 | <stop offset="0.22" stop-color="#6A6A6A"/>
34 | <stop offset="0.47" stop-color="#3C3C3C"/>
35 | <stop offset="0.69" stop-color="#1B1B1B"/>
36 | <stop offset="0.88" stop-color="#070707"/>
37 | <stop offset="1"/>
38 | </linearGradient>
39 | <linearGradient id="paint1_linear_36_39" x1="13.2101" y1="24.2501" x2="77.2901" y2="63.55" gradientUnits="userSpaceOnUse">
40 | <stop stop-color="#1A1A1A"/>
41 | <stop offset="0.22" stop-color="#1D1D1D"/>
42 | <stop offset="0.4" stop-color="#262626"/>
43 | <stop offset="0.55" stop-color="#373737"/>
44 | <stop offset="0.7" stop-color="#4E4E4E"/>
45 | <stop offset="0.84" stop-color="#6C6C6C"/>
46 | <stop offset="0.98" stop-color="#919191"/>
47 | <stop offset="1" stop-color="#999999"/>
48 | </linearGradient>
49 | <clipPath id="clip0_36_39">
50 | <rect width="84" height="84" fill="white"/>
51 | </clipPath>
52 | </defs>
53 | </svg>
54 | 


--------------------------------------------------------------------------------
/client/src/assets/PieceOrange.svg:
--------------------------------------------------------------------------------
 1 | <svg width="83" height="83" viewBox="0 0 83 83" fill="none" xmlns="http://www.w3.org/2000/svg">
 2 | <g id="Capa_2" clip-path="url(#clip0_36_311)">
 3 | <g id="Group">
 4 | <path id="Vector" d="M41.47 82.94C64.3732 82.94 82.94 64.3732 82.94 41.47C82.94 18.5668 64.3732 0 41.47 0C18.5668 0 0 18.5668 0 41.47C0 64.3732 18.5668 82.94 41.47 82.94Z" fill="url(#paint0_linear_36_311)"/>
 5 | <path id="Vector_2" d="M41.47 78.79C62.0813 78.79 78.79 62.0813 78.79 41.47C78.79 20.8588 62.0813 4.15002 41.47 4.15002C20.8588 4.15002 4.15002 20.8588 4.15002 41.47C4.15002 62.0813 20.8588 78.79 41.47 78.79Z" fill="url(#paint1_linear_36_311)"/>
 6 | <path id="Vector_3" d="M41.47 69.46C56.9284 69.46 69.46 56.9284 69.46 41.47C69.46 26.0115 56.9284 13.48 41.47 13.48C26.0115 13.48 13.48 26.0115 13.48 41.47C13.48 56.9284 26.0115 69.46 41.47 69.46Z" fill="#E56B36"/>
 7 | </g>
 8 | <g id="Group_2" filter="url(#filter0_d_36_311)">
 9 | <path id="Vector_4" d="M44.31 24.18C44.81 23.95 43.56 21.51 41.58 22.31C39.51 23.15 39.44 26.04 39.3 27.48C39.16 28.92 37.77 30.39 37.77 30.39H46.15C46.15 30.39 44.71 29.3 44.17 27.47C43.63 25.64 43.67 24.47 44.31 24.17V24.18Z" fill="#689324"/>
10 | <path id="Vector_5" d="M40.64 24.88C40.95 24.01 42.15 22.98 43.02 22.28C42.61 22.12 42.12 22.09 41.58 22.31C41.58 22.31 41.52 22.34 41.49 22.36C41.48 22.36 41.47 22.37 41.46 22.38C41.31 22.45 41.17 22.53 41.04 22.62C40.52 22.99 40.18 23.51 39.93 24.09C39.93 24.1 39.92 24.12 39.91 24.13C39.86 24.26 39.81 24.4 39.77 24.53C39.77 24.54 39.77 24.56 39.76 24.57C39.67 24.87 39.6 25.18 39.54 25.49C39.51 25.67 39.48 25.85 39.46 26.02V26.05C39.41 26.43 39.37 26.79 39.35 27.11C39.35 27.2 39.33 27.29 39.33 27.37C39.33 27.4 39.33 27.44 39.33 27.48C39.31 27.64 39.28 27.8 39.24 27.95C39.24 27.96 39.24 27.97 39.24 27.99C39.24 27.99 39.24 27.99 39.24 28C39.22 28.08 39.18 28.16 39.16 28.24C39.13 28.31 39.11 28.39 39.08 28.46C39.08 28.47 39.08 28.48 39.07 28.49C39.03 28.58 38.98 28.67 38.94 28.77C38.91 28.84 38.88 28.9 38.84 28.97C38.79 29.06 38.75 29.14 38.7 29.22C38.68 29.26 38.65 29.3 38.63 29.34H39.5C39.5 29.34 40.13 26.45 40.69 24.88H40.64Z" fill="#87B236"/>
11 | <path id="Vector_6" d="M24.31 55.79C27.28 58.77 28.96 57.79 28.96 57.79C33.04 60.8 36.78 59.03 36.78 59.03C37.7 61.14 41.68 60.77 41.68 60.77C41.68 60.77 45.66 61.13 46.58 59.02C46.58 59.02 50.76 61.07 53.47 58.36C53.47 58.36 55.45 59.67 58.42 56.69C61.59 53.5 60.16 43.93 58.17 37.65C56.17 31.37 52.13 31.41 52.13 31.41C52.13 31.41 51.24 30.14 49.09 29.58C46.48 28.9 45.21 29.7 45.21 29.7C45.21 29.7 44.22 28.29 41.46 28.29C38.7 28.29 37.92 29.46 37.92 29.46C37.92 29.46 36.88 28.95 34.92 29.63C32.82 30.36 31.22 30.95 31.22 30.95C31.22 30.95 27.16 31.4 25.17 37.68C23.18 43.96 21.14 52.6 24.32 55.78L24.31 55.79Z" fill="#F6921E"/>
12 | <path id="Vector_7" d="M58.16 37.6599C56.16 31.3799 52.1199 31.4199 52.1199 31.4199C52.1199 31.4199 51.23 30.1499 49.08 29.5899C46.47 28.9099 45.2 29.7099 45.2 29.7099C45.2 29.7099 44.21 28.2999 41.45 28.2999C38.69 28.2999 37.91 29.4699 37.91 29.4699C37.91 29.4699 36.87 28.9599 34.91 29.6399C32.8099 30.3699 31.2099 30.9599 31.2099 30.9599C31.2099 30.9599 27.15 31.4099 25.16 37.6899C24.92 38.4399 24.68 39.2299 24.45 40.0299C25.35 39.0899 27.4 36.9799 27.74 36.8599C28.19 36.7099 29.57 36.9299 29.83 35.1399C30.09 33.3499 31.8799 31.9299 31.8799 31.9299C30.7799 33.8899 30.84 35.6999 30.84 35.6999C30.84 35.6999 33.08 34.4299 33.97 34.9899C34.87 35.5499 36.18 41.4399 36.18 41.4399C36.18 41.4399 36.32 36.2199 36.77 34.0899C37.22 31.9599 38.18 30.3599 38.18 30.3599C37.18 32.8799 37.4399 35.5099 37.4399 35.5099C37.4399 35.5099 40.46 33.8299 42.33 35.0199C44.2 36.2099 46.36 41.2099 46.36 41.2099C46.36 35.9899 45.8699 31.5899 45.8699 31.5899C46.6899 33.2699 46.84 35.0999 46.84 35.0999C51.02 36.8099 54.4199 44.7599 54.4199 44.7599C54.5599 38.0799 52.54 33.0499 52.54 33.0499C52.54 33.0499 53.21 33.0899 54.74 34.3899C55.86 35.3399 57.84 38.4499 58.84 40.0599C58.6199 39.2299 58.39 38.4199 58.15 37.6699L58.16 37.6599Z" fill="#FCA659"/>
13 | <path id="Vector_8" d="M47.8399 48.6499V50.5699C47.8399 50.8499 47.6499 51.0899 47.3799 51.1399L45.4599 51.5499C45.0999 51.6299 44.7499 51.3499 44.7499 50.9799V49.5199C43.7699 49.7099 42.7399 49.8299 41.6599 49.8399C40.5799 49.8399 39.5499 49.7099 38.5699 49.5299V50.9899C38.5699 51.3599 38.2299 51.6399 37.8699 51.5599L35.9399 51.1599C35.6699 51.0999 35.4699 50.8599 35.4799 50.5899V48.6799C32.3399 47.5299 30.2999 45.9499 30.2999 45.9499C32.6799 54.2699 37.4499 54.9599 41.6599 55.0799C45.8799 54.9499 50.6399 54.2499 53.0099 45.9299C53.0099 45.9299 50.9699 47.5199 47.8399 48.6699V48.6499Z" fill="#CC7221"/>
14 | <path id="Vector_9" d="M37.87 52.8899L35.95 52.4899C35.68 52.4299 35.48 52.1899 35.48 51.9199V50.5799V50.0099C33.32 49.2199 31.7 48.2299 30.89 47.6899C33.41 54.3399 37.77 54.9499 41.66 55.0599C45.56 54.9399 49.91 54.3199 52.42 47.6699C51.61 48.2199 49.99 49.1999 47.84 49.9999V50.5699V51.9099C47.84 52.1899 47.65 52.4299 47.38 52.4799L45.46 52.8899C45.1 52.9699 44.75 52.6899 44.75 52.3199V50.9799V50.8599C43.77 51.0499 42.74 51.1699 41.67 51.1799C40.59 51.1799 39.56 51.0499 38.58 50.8699V50.9899V52.3299C38.58 52.6999 38.24 52.9799 37.87 52.8999V52.8899Z" fill="#1A1A1A"/>
15 | <path id="Vector_10" d="M38.63 39.15C38.63 41.09 37.06 42.66 35.13 42.66C33.19 42.66 31.62 41.09 31.62 39.16C31.62 37.22 33.19 35.65 35.12 35.65C37.06 35.65 38.63 37.22 38.63 39.15Z" fill="#BF6710"/>
16 | <path id="Vector_11" d="M35.08 37.54C33.5 37.54 32.17 38.59 31.73 40.02C32.11 41.54 33.49 42.67 35.13 42.67C36.71 42.67 38.04 41.62 38.48 40.19C38.1 38.67 36.72 37.54 35.08 37.54Z" fill="#1A1A1A"/>
17 | <path id="Vector_12" d="M51.54 39.14C51.54 41.08 49.97 42.65 48.04 42.65C46.1 42.65 44.53 41.08 44.53 39.15C44.53 37.21 46.1 35.64 48.03 35.64C49.97 35.64 51.54 37.21 51.54 39.14Z" fill="#BF6710"/>
18 | <path id="Vector_13" d="M47.99 37.52C46.41 37.52 45.08 38.57 44.64 40C45.02 41.52 46.4 42.65 48.04 42.65C49.62 42.65 50.95 41.6 51.39 40.17C51.01 38.65 49.63 37.52 47.99 37.52Z" fill="#1A1A1A"/>
19 | </g>
20 | </g>
21 | <defs>
22 | <filter id="filter0_d_36_311" x="17.0067" y="10.8195" width="71.6125" height="72.6455" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
23 | <feFlood flood-opacity="0" result="BackgroundImageFix"/>
24 | <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
25 | <feOffset dx="11.34" dy="5.67"/>
26 | <feGaussianBlur stdDeviation="8.5"/>
27 | <feColorMatrix type="matrix" values="0 0 0 0 0.898039 0 0 0 0 0.764706 0 0 0 0 0.603922 0 0 0 0.75 0"/>
28 | <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_36_311"/>
29 | <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_36_311" result="shape"/>
30 | </filter>
31 | <linearGradient id="paint0_linear_36_311" x1="-10.89" y1="9.35" x2="79.19" y2="64.61" gradientUnits="userSpaceOnUse">
32 | <stop stop-color="#FEFEFD"/>
33 | <stop offset="0.04" stop-color="#F9DFD4"/>
34 | <stop offset="0.09" stop-color="#F4C4AF"/>
35 | <stop offset="0.15" stop-color="#F0AB8E"/>
36 | <stop offset="0.2" stop-color="#EC9772"/>
37 | <stop offset="0.27" stop-color="#E9875C"/>
38 | <stop offset="0.34" stop-color="#E77A4A"/>
39 | <stop offset="0.44" stop-color="#E6713E"/>
40 | <stop offset="0.57" stop-color="#E56C37"/>
41 | <stop offset="0.9" stop-color="#E56B36"/>
42 | </linearGradient>
43 | <linearGradient id="paint1_linear_36_311" x1="13.12" y1="24.08" x2="76.76" y2="63.12" gradientUnits="userSpaceOnUse">
44 | <stop stop-color="#E56B20"/>
45 | <stop offset="0.26" stop-color="#E97529"/>
46 | <stop offset="0.71" stop-color="#F39044"/>
47 | <stop offset="1" stop-color="#FCA659"/>
48 | </linearGradient>
49 | <clipPath id="clip0_36_311">
50 | <rect width="83" height="83" fill="white"/>
51 | </clipPath>
52 | </defs>
53 | </svg>
54 | 


--------------------------------------------------------------------------------
/client/src/assets/Player1.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Player1.png


--------------------------------------------------------------------------------
/client/src/assets/Player1_0.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Player1_0.png


--------------------------------------------------------------------------------
/client/src/assets/Player2.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Player2.png


--------------------------------------------------------------------------------
/client/src/assets/Player2_0.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Player2_0.png


--------------------------------------------------------------------------------
/client/src/assets/Player3_0.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Player3_0.png


--------------------------------------------------------------------------------
/client/src/assets/Player4_0.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Player4_0.png


--------------------------------------------------------------------------------
/client/src/assets/QueenBlack.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/QueenBlack.png


--------------------------------------------------------------------------------
/client/src/assets/QueenOrange.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/QueenOrange.png


--------------------------------------------------------------------------------
/client/src/assets/Return.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Return.png


--------------------------------------------------------------------------------
/client/src/assets/SelectPlayer.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/SelectPlayer.png


--------------------------------------------------------------------------------
/client/src/assets/Title.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Title.png


--------------------------------------------------------------------------------
/client/src/assets/TotalPiece.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/TotalPiece.png


--------------------------------------------------------------------------------
/client/src/assets/Winner1.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Winner1.png


--------------------------------------------------------------------------------
/client/src/assets/Winner2.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Winner2.png


--------------------------------------------------------------------------------
/client/src/assets/Witch.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/The-Marquis-Gaming/checkers-dojo/main/client/src/assets/Witch.png


--------------------------------------------------------------------------------
/client/src/bindings.ts:
--------------------------------------------------------------------------------
  1 | import type { SchemaType } from "@dojoengine/sdk";
  2 | 
  3 | // Type definition for `checkers_marq::models::PieceValue` struct
  4 | export interface PieceValue {
  5 | 	fieldOrder: string[];
  6 | 	position: Position;
  7 | 	is_king: boolean;
  8 | 	is_alive: boolean;
  9 | }
 10 | 
 11 | // Type definition for `checkers_marq::models::Coordinates` struct
 12 | export interface Coordinates {
 13 | 	//fieldOrder: string[];
 14 | 	raw: number;
 15 | 	col: number;
 16 | }
 17 | 
 18 | // Type definition for `checkers_marq::models::Piece` struct
 19 | export interface Piece {
 20 | 	//fieldOrder: string[];
 21 | 	player: string;
 22 | 	coordinates: Coordinates;
 23 | 	position: Position;
 24 | 	is_king: boolean;
 25 | 	is_alive: boolean;
 26 | }
 27 | 
 28 | // Type definition for `checkers_marq::models::Position` enum
 29 | export enum Position {
 30 | 	None,
 31 | 	Up,
 32 | 	Down,
 33 | }
 34 | 
 35 | export interface DojoStarterSchemaType extends SchemaType {
 36 | 	checkers_marq: {
 37 | 		PieceValue: PieceValue,
 38 | 		Coordinates: Coordinates,
 39 | 		Piece: Piece,
 40 | 		ERC__Balance: ERC__Balance,
 41 | 		ERC__Token: ERC__Token,
 42 | 		ERC__Transfer: ERC__Transfer,
 43 | 	},
 44 | }
 45 | export const schema: DojoStarterSchemaType = {
 46 | 	checkers_marq: {
 47 | 		PieceValue: {
 48 | 			fieldOrder: ['position', 'is_king', 'is_alive'],
 49 | 			position: Position.None,
 50 | 			is_king: false,
 51 | 			is_alive: false,
 52 | 		},
 53 | 		Coordinates: {
 54 | 			fieldOrder: ['raw', 'col'],
 55 | 			raw: 0,
 56 | 			col: 0,
 57 | 		},
 58 | 		Piece: {
 59 | 			fieldOrder: ['player', 'coordinates', 'position', 'is_king', 'is_alive'],
 60 | 			player: "",
 61 | 			coordinates: { fieldOrder: ['raw', 'col'], raw: 0, col: 0, },
 62 | 			position: Position.None,
 63 | 			is_king: false,
 64 | 			is_alive: false,
 65 | 		},
 66 | 		ERC__Balance: {
 67 | 			fieldOrder: ['balance', 'type', 'tokenmetadata'],
 68 | 			balance: '',
 69 | 			type: 'ERC20',
 70 | 			tokenMetadata: {
 71 | 				fieldOrder: ['name', 'symbol', 'tokenId', 'decimals', 'contractAddress'],
 72 | 				name: '',
 73 | 				symbol: '',
 74 | 				tokenId: '',
 75 | 				decimals: '',
 76 | 				contractAddress: '',
 77 | 			},
 78 | 		},
 79 | 		ERC__Token: {
 80 | 			fieldOrder: ['name', 'symbol', 'tokenId', 'decimals', 'contractAddress'],
 81 | 			name: '',
 82 | 			symbol: '',
 83 | 			tokenId: '',
 84 | 			decimals: '',
 85 | 			contractAddress: '',
 86 | 		},
 87 | 		ERC__Transfer: {
 88 | 			fieldOrder: ['from', 'to', 'amount', 'type', 'executed', 'tokenMetadata'],
 89 | 			from: '',
 90 | 			to: '',
 91 | 			amount: '',
 92 | 			type: 'ERC20',
 93 | 			executedAt: '',
 94 | 			tokenMetadata: {
 95 | 				fieldOrder: ['name', 'symbol', 'tokenId', 'decimals', 'contractAddress'],
 96 | 				name: '',
 97 | 				symbol: '',
 98 | 				tokenId: '',
 99 | 				decimals: '',
100 | 				contractAddress: '',
101 | 			},
102 | 			transactionHash: '',
103 | 		},
104 | 
105 | 	},
106 | };
107 | // Type definition for ERC__Balance struct
108 | export type ERC__Type = 'ERC20' | 'ERC721';
109 | export interface ERC__Balance {
110 |     fieldOrder: string[];
111 |     balance: string;
112 |     type: string;
113 |     tokenMetadata: ERC__Token;
114 | }
115 | export interface ERC__Token {
116 |     fieldOrder: string[];
117 |     name: string;
118 |     symbol: string;
119 |     tokenId: string;
120 |     decimals: string;
121 |     contractAddress: string;
122 | }
123 | export interface ERC__Transfer {
124 |     fieldOrder: string[];
125 |     from: string;
126 |     to: string;
127 |     amount: string;
128 |     type: string;
129 |     executedAt: string;
130 |     tokenMetadata: ERC__Token;
131 |     transactionHash: string;
132 | }


--------------------------------------------------------------------------------
/client/src/components/CaptureMove.tsx:
--------------------------------------------------------------------------------
 1 | import React, { useEffect, useState } from 'react';
 2 | import { PieceUI, Coordinates } from './InitPieces';
 3 | import { Position } from '../bindings';
 4 | 
 5 | interface CaptureMovesProps {
 6 |   selectedPiece: PieceUI | null;
 7 |   upPieces: PieceUI[];
 8 |   downPieces: PieceUI[];
 9 |   cellSize: number;
10 |   onCapture: (move: Coordinates, capturedPiece: PieceUI) => void;
11 | }
12 | 
13 | const CaptureMoves: React.FC<CaptureMovesProps> = ({
14 |   selectedPiece,
15 |   upPieces,
16 |   downPieces,
17 |   cellSize,
18 |   onCapture,
19 | }) => {
20 |   const [captureMoves, setCaptureMoves] = useState<{ move: Coordinates; capturedPiece: PieceUI }[]>([]);
21 | 
22 |   useEffect(() => {
23 |     if (selectedPiece) {
24 |       calculateCaptureMoves(selectedPiece);
25 |     }
26 |   }, [selectedPiece]);
27 | 
28 |   const calculateCaptureMoves = (piece: PieceUI) => {
29 |     const moves: { move: Coordinates; capturedPiece: PieceUI }[] = [];
30 |     const { row, col } = piece.piece;
31 |     const enemyPieces = piece.piece.position === Position.Up ? downPieces : upPieces;
32 | 
33 |     const directions = piece.piece.position === Position.Up ? [[1, -1], [1, 1]] : [[-1, -1], [-1, 1]];
34 | 
35 |     directions.forEach(([rowOffset, colOffset]) => {
36 |       const enemyRow = row + rowOffset;
37 |       const enemyCol = col + colOffset;
38 |       const landingRow = row + rowOffset * 2;
39 |       const landingCol = col + colOffset * 2;
40 |       const capturedPiece = enemyPieces.find(
41 |         (p) => p.piece.row === enemyRow && p.piece.col === enemyCol
42 |       );
43 | 
44 |       const isLandingEmpty =
45 |         ![...upPieces, ...downPieces].some(
46 |           (p) => p.piece.row === landingRow && p.piece.col === landingCol
47 |         );
48 | 
49 |       if (capturedPiece && isLandingEmpty && landingRow >= 0 && landingRow < 8 && landingCol >= 0 && landingCol < 8) {
50 |         moves.push({
51 |           move: { row: landingRow, col: landingCol },
52 |           capturedPiece,
53 |         });
54 |         
55 |         console.log('Posible captura detectada:', {
56 |           captor: piece,
57 |           capturedPiece,
58 |           landingPosition: { row: landingRow, col: landingCol },
59 |         });
60 |       }
61 |     });
62 | 
63 |     setCaptureMoves(moves);
64 |   };
65 | 
66 |   return (
67 |     <>
68 |       {captureMoves.map(({ move, capturedPiece }, index) => (
69 |         <div
70 |           key={index}
71 |           className="absolute border border-red-500"
72 |           style={{
73 |             left: `${move.col * cellSize + 63}px`,
74 |             top: `${move.row * cellSize + 63}px`,
75 |             width: '60px',
76 |             height: '60px',
77 |             cursor: 'pointer',
78 |             backgroundColor: 'rgba(255, 0, 0, 0.5)',
79 |           }}
80 |           onClick={() => onCapture(move, capturedPiece)}
81 |         />
82 |       ))}
83 |     </>
84 |   );
85 | };
86 | 
87 | export default CaptureMoves;
88 | 


--------------------------------------------------------------------------------
/client/src/components/Checker.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from "react";
  2 | import { SDK, createDojoStore } from "@dojoengine/sdk";
  3 | import { schema, Position } from "../bindings";
  4 | import { useDojo } from "../hooks/useDojo";
  5 | import GameOver from "../components/GameOver";
  6 | import Winner from "../components/Winner";
  7 | import { createInitialPieces, PieceUI, Coordinates } from "./InitPieces";
  8 | import ControllerButton from '../connector/ControllerButton';
  9 | import CreateBurner from "../connector/CreateBurner";
 10 | import BackgroundCheckers from "../assets/BackgrounCheckers.png";
 11 | import Board from "../assets/Board.png";
 12 | import PieceBlack from "../assets/PieceBlack.svg";
 13 | import PieceOrange from "../assets/PieceOrange.svg";
 14 | import QueenBlack from "../assets/QueenBlack.png";
 15 | import QueenOrange from "../assets/QueenOrange.png";
 16 | import Player1 from "../assets/Player1_0.png";
 17 | import Player2 from "../assets/Player2_0.png";
 18 | import Return from "../assets/Return.png";
 19 | import { useAccount } from "@starknet-react/core";
 20 | import { Account } from "starknet";
 21 | import { Piece } from "../models.gen";
 22 | 
 23 | export const useDojoStore = createDojoStore<typeof schema>();
 24 | 
 25 | function Checker({ }: { sdk: SDK<typeof schema> }) {
 26 |   const {
 27 |      account: { account : burner },
 28 |     setup: { setupWorld },
 29 |   } = useDojo();
 30 | 
 31 |   const {account} = useAccount();
 32 |   const [arePiecesVisible] = useState(true);
 33 |   const [isGameOver] = useState(false);
 34 |   const [isWinner, setIsWinner] = useState(false);
 35 |   const [selectedPieceId, setSelectedPieceId] = useState<number | null>(null);
 36 |   const [validMoves, setValidMoves] = useState<Coordinates[]>([]);
 37 |   const [mustCapture, setMustCapture] = useState(false);
 38 |   const [orangeScore, setOrangeScore] = useState(12);
 39 |   const [blackScore, setBlackScore] = useState(12);
 40 | 
 41 |   
 42 | 
 43 |   const [upPieces, setUpPieces] = useState<PieceUI[]>([]);
 44 |   const [downPieces, setDownPieces] = useState<PieceUI[]>([]);
 45 |   const activeAccount = account || burner;
 46 | 
 47 |     useEffect(() => {
 48 |       if (activeAccount?.address) {
 49 |         const { initialBlackPieces, initialOrangePieces } = createInitialPieces(
 50 |           activeAccount.address
 51 |         );
 52 |         setUpPieces(initialBlackPieces);
 53 |         setDownPieces(initialOrangePieces);
 54 |       }
 55 |     }, [account]);
 56 |   const cellSize = 88;
 57 | 
 58 | 
 59 | 
 60 |   // Check for a winner when scores change
 61 |   useEffect(() => {
 62 |     if (orangeScore === 0) {
 63 |       setIsWinner(false);
 64 |     } else if (blackScore === 0) {
 65 |       setIsWinner(true);
 66 |     }
 67 |   }, [orangeScore, blackScore]);
 68 | 
 69 |   const isCellOccupied = (row: number, col: number): boolean => {
 70 |     return [...upPieces, ...downPieces].some(piece => piece.piece.row === row && piece.piece.col === col);
 71 |   };
 72 | 
 73 |   const calculateQueenMoves = (piece: PieceUI): Coordinates[] => {
 74 |     const moves: Coordinates[] = [];
 75 |     const directions = [
 76 |       [-1, -1], [-1, 1],
 77 |       [1, -1], [1, 1]
 78 |     ];
 79 | 
 80 |     for (const [deltaRow, deltaCol] of directions) {
 81 |       let currentRow = piece.piece.row + deltaRow;
 82 |       let currentCol = piece.piece.col + deltaCol;
 83 | 
 84 |       while (currentRow >= 0 && currentRow < 8 && currentCol >= 0 && currentCol < 8) {
 85 |         if (!isCellOccupied(currentRow, currentCol)) {
 86 |           moves.push({
 87 |             row: currentRow,
 88 |             col: currentCol,
 89 |             capturedPiece: undefined,
 90 |             isCapture: undefined
 91 |           });
 92 |         } else {
 93 |           const isEnemy = isCellOccupiedByEnemy(currentRow, currentCol, piece.piece.position);
 94 |           if (isEnemy) {
 95 |             const nextRow = currentRow + deltaRow;
 96 |             const nextCol = currentCol + deltaCol;
 97 |             if (
 98 |               nextRow >= 0 && nextRow < 8 &&
 99 |               nextCol >= 0 && nextCol < 8 &&
100 |               !isCellOccupied(nextRow, nextCol)
101 |             ) {
102 |               moves.push({
103 |                 row: nextRow,
104 |                 col: nextCol,
105 |                 capturedPiece: { row: currentRow, col: currentCol },
106 |                 isCapture: true,
107 |               });
108 |             }
109 |           }
110 |           break;
111 |         }
112 |         currentRow += deltaRow;
113 |         currentCol += deltaCol;
114 |       }
115 |     }
116 |     return moves;
117 |   };
118 | 
119 |   const calculateCaptureMoves = (piece: PieceUI): Coordinates[] => {
120 |     if (piece.piece.is_king) {
121 |       return calculateQueenMoves(piece).filter(move => move.isCapture);
122 |     }
123 | 
124 |     const captureMoves: Coordinates[] = [];
125 |     const { row, col } = piece.piece;
126 |     const directions = piece.piece.is_king ? [1, -1] : [piece.piece.position === Position.Up ? 1 : -1];
127 | 
128 |     for (const dir of directions) {
129 |       [-2, 2].forEach(deltaCol => {
130 |         const targetRow = row + (2 * dir);
131 |         const targetCol = col + deltaCol;
132 |         const middleRow = row + dir;
133 |         const middleCol = col + (deltaCol / 2);
134 | 
135 |         if (
136 |           targetRow >= 0 && targetRow < 8 &&
137 |           targetCol >= 0 && targetCol < 8 &&
138 |           !isCellOccupied(targetRow, targetCol)
139 |         ) {
140 |           const isEnemyPiece = isCellOccupiedByEnemy(middleRow, middleCol, piece.piece.position);
141 |           if (isEnemyPiece) {
142 |             captureMoves.push({
143 |               row: targetRow,
144 |               col: targetCol,
145 |               isCapture: true,
146 |               capturedPiece: { row: middleRow, col: middleCol }
147 |             });
148 |           }
149 |         }
150 |       });
151 |     }
152 | 
153 |     return captureMoves;
154 |   };
155 | 
156 |   const ScoreCounter = ({
157 |     orangeScore,
158 |     blackScore,
159 |   }: {
160 |     orangeScore: number;
161 |     blackScore: number;
162 |     totalOrangePieces: number;
163 |     totalBlackPieces: number;
164 |   }) => {
165 | 
166 |     return (
167 |       <div className="fixed w-full h-screen">
168 |         {/* Orange Piece */}
169 |         <div
170 |           className="absolute p-4 bg-orange-100 rounded-lg shadow-lg border-2 border-black"
171 |           style={{ top: "110px", right: "1550px", width: "95px", height: "95px" }}
172 |         >
173 |           <div className="text-center">
174 |             <p className="text-2xl font-bold text-orange-800">{blackScore}</p>
175 |             <h3 className="font-bold text-orange-600">Orange</h3>
176 |           </div>
177 |         </div>
178 |         {/* Black Piece */}
179 |         <div
180 |           className="absolute p-4 bg-gray-100 rounded-lg shadow-lg border-2 border-black"
181 |           style={{ top: "790px", left: "1650px", width: "95px", height: "95px" }}
182 |         >
183 |           <div className="text-center">
184 |             <p className="text-2xl font-bold text-gray-800">{orangeScore}</p>
185 |             <h3 className="font-bold text-gray-600">Black</h3>
186 |           </div>
187 |         </div>
188 |       </div>
189 |     );
190 | }    
191 | 
192 |   const calculateValidMoves = (piece: PieceUI): Coordinates[] => {
193 |     const allPieces = piece.piece.position === Position.Up ? upPieces : downPieces;
194 |     const hasAnyCaptures = allPieces.some(p => calculateCaptureMoves(p).length > 0);
195 | 
196 |     if (hasAnyCaptures) {
197 |       setMustCapture(true);
198 |       return calculateCaptureMoves(piece);
199 |     }
200 | 
201 |     setMustCapture(false);
202 | 
203 |     if (piece.piece.is_king) {
204 |       return calculateQueenMoves(piece);
205 |     }
206 | 
207 |     const regularMoves: Coordinates[] = [];
208 |     const { row, col } = piece.piece;
209 |     const direction = piece.piece.position === Position.Up ? 1 : -1;
210 | 
211 |     [-1, 1].forEach(deltaCol => {
212 |       const newRow = row + direction;
213 |       const newCol = col + deltaCol;
214 | 
215 |       if (
216 |         newRow >= 0 && newRow < 8 &&
217 |         newCol >= 0 && newCol < 8 &&
218 |         !isCellOccupied(newRow, newCol)
219 |       ) {
220 |         regularMoves.push({
221 |           row: newRow,
222 |           col: newCol,
223 |           capturedPiece: undefined,
224 |           isCapture: undefined
225 |         });
226 |       }
227 |     });
228 | 
229 |     return regularMoves;
230 |   };
231 | 
232 |   const isCellOccupiedByEnemy = (row: number, col: number, position: Position): boolean => {
233 |     const enemyPieces = position === Position.Up ? downPieces : upPieces;
234 |     return enemyPieces.some(piece => piece.piece.row === row && piece.piece.col === col);
235 |   };
236 | 
237 |   const handlePieceClick = async (piece: PieceUI) => {
238 |     if (selectedPieceId === piece.id) {
239 |       setSelectedPieceId(null);
240 |       setValidMoves([]);
241 |       return;
242 |     }
243 | 
244 |     const moves = calculateValidMoves(piece);
245 | 
246 |     if (mustCapture && !moves.some(move => move.isCapture)) {
247 |       return;
248 |     }
249 | 
250 |     setSelectedPieceId(piece.id);
251 |     setValidMoves(moves);
252 | 
253 |     try {
254 |       if (account) {
255 |         const { row, col } = piece.piece;
256 |         await (await setupWorld.actions).canChoosePiece((account as Account), piece.piece.position, { row, col }, 0);
257 |       }
258 |     } catch (error) {
259 |       console.error("Error in choose piece:", error);
260 |     }
261 |   };
262 | 
263 |   const handleMoveClick = async (move: Coordinates) => {
264 |     if (!selectedPieceId) return;
265 | 
266 |     const selectedPiece = [...upPieces, ...downPieces].find(piece => piece.id === selectedPieceId);
267 |     if (!selectedPiece) return;
268 |     console.log("piece moved:", selectedPiece);
269 |     const piecesToUpdate = selectedPiece.piece.position === Position.Up ? upPieces : downPieces;
270 |     const enemyPieces = selectedPiece.piece.position === Position.Up ? downPieces : upPieces;
271 | 
272 |     // Handle capturing and update the score
273 |     if (move.isCapture && move.capturedPiece) {
274 |       const updatedEnemyPieces = enemyPieces.filter(
275 |         piece => !(piece.piece.row === move.capturedPiece?.row && piece.piece.col === move.capturedPiece?.col)
276 |       );
277 | 
278 |       if (selectedPiece.piece.position === Position.Up) {
279 |         setDownPieces(updatedEnemyPieces);
280 |         setBlackScore(prev => prev - 1);
281 |       } else {
282 |         setUpPieces(updatedEnemyPieces);
283 |         setOrangeScore(prev => prev - 1);
284 |       }
285 |     }
286 | 
287 |     // Update the piece position and check for promotion
288 |     const shouldPromoteToQueen =
289 |       (selectedPiece.piece.position === Position.Up && move.row === 7) ||
290 |       (selectedPiece.piece.position === Position.Down && move.row === 0);
291 | 
292 |     const updatedPieces = piecesToUpdate.map((piece: PieceUI) => {
293 |       if (piece.id === selectedPieceId) {
294 |         return {
295 |           ...piece,
296 |           piece: {
297 |             ...piece.piece,
298 |             row: move.row,
299 |             col: move.col,
300 |             is_king: shouldPromoteToQueen || piece.piece.is_king
301 |           }
302 |         };
303 |       }
304 |       return piece;
305 |     });
306 | 
307 |     if (selectedPiece.piece.position === Position.Up) {
308 |       setUpPieces(updatedPieces);
309 |     } else {
310 |       setDownPieces(updatedPieces);
311 |     }
312 |     try {
313 |       if (account) {
314 |         const movedPiece = await(await setupWorld.actions).movePiece(
315 |           (account as Account),
316 |           selectedPiece.piece as Piece,
317 |           move
318 |         );
319 |         console.log(
320 |           (movedPiece as any).transaction_hash,
321 |           "movePiece transaction_hash success"
322 |         );
323 |       }
324 |     } catch (error) {
325 |       console.error("Error moving the piece:", error);
326 |     }
327 | 
328 | 
329 |     // After handling the move, check if the game is over
330 |     setSelectedPieceId(null);
331 |     setValidMoves([]);
332 |   };
333 | 
334 |   return (
335 |     <div
336 |       className="relative h-screen w-full"
337 |       style={{
338 |         backgroundImage: `url(${BackgroundCheckers})`,
339 |         backgroundSize: "cover",
340 |         backgroundPosition: "center",
341 |       }}
342 |     >
343 |       <div
344 |         style={{
345 |           position: 'absolute',
346 |           top: '20px',
347 |           right: '20px',
348 |           display: 'flex',
349 |           gap: '20px',
350 |           zIndex: 2,
351 |         }}
352 |       >
353 |       </div>
354 | 
355 |       <ScoreCounter orangeScore={orangeScore} blackScore={blackScore} totalOrangePieces={upPieces.length} totalBlackPieces={downPieces.length} />
356 |    
357 |     <div
358 |         style={{
359 |           position: 'absolute',
360 |           top: '20px',
361 |           right: '20px',
362 |           display: 'flex',
363 |           gap: '20px',
364 |           zIndex: 2,
365 |         }}
366 |       >
367 |         <ControllerButton />
368 |         <CreateBurner/>
369 |       </div>
370 |       
371 |       {isGameOver && <GameOver />}
372 |       {isWinner && <Winner />}
373 | 
374 |       <img
375 |         src={Player1}
376 |         alt="Player 1"
377 |         className="fixed rounded-lg"
378 |         style={{ top: "110px", left: "140px", width: "90px", border: "2px solid black" }}
379 |       />
380 |       <img
381 |         src={Player2}
382 |         alt="Player 2"
383 |         className="fixed rounded-lg"
384 |         style={{ top: "790px", right: "320px", width: "90px", border: "2px solid orange" }}
385 |       />
386 |       <div className="flex items-center justify-center h-full">
387 |         <div className="relative">
388 |           <img
389 |             src={Board}
390 |             alt="Board"
391 |             className="w-[800px] h-[800px] object-contain"
392 |           />
393 |           {arePiecesVisible && (
394 |             <>
395 |               {upPieces.map((piece) => (
396 |                 <img
397 |                   key={piece.id}
398 |                   src={piece.piece.is_king ? QueenBlack : PieceBlack}
399 |                   className="absolute"
400 |                   style={{
401 |                     left: `${piece.piece.col * cellSize + 63}px`,
402 |                     top: `${piece.piece.row * cellSize + 63}px`,
403 |                     cursor: "pointer",
404 |                     width: "60px",
405 |                     height: "60px",
406 |                     border: selectedPieceId === piece.id ? "2px solid yellow" : "none",
407 |                   }}
408 |                   onClick={() => handlePieceClick(piece)}
409 |                 />
410 |               ))}
411 |               {downPieces.map((piece) => (
412 |                 <img
413 |                   key={piece.id}
414 |                   src={piece.piece.is_king ? QueenOrange : PieceOrange}
415 |                   className="absolute"
416 |                   style={{
417 |                     left: `${piece.piece.col * cellSize + 64}px`,
418 |                     top: `${piece.piece.row * cellSize + 55}px`,
419 |                     cursor: "pointer",
420 |                     width: "60px",
421 |                     height: "60px",
422 |                     border: selectedPieceId === piece.id ? "2px solid yellow" : "none",
423 |                   }}
424 |                   onClick={() => handlePieceClick(piece)}
425 |                 />
426 |               ))}
427 |               {validMoves.map((move, index) => (
428 |                 <div
429 |                   key={`move-${index}`}
430 |                   className="absolute"
431 |                   style={{
432 |                     left: `${move.col * cellSize + 63}px`,
433 |                     top: `${move.row * cellSize + 63}px`,
434 |                     width: "60px",
435 |                     height: "60px",
436 |                     backgroundColor: move.isCapture ? "rgba(255, 0, 0, 0.3)" : "rgba(0, 255, 0, 0.3)",
437 |                     borderRadius: "50%",
438 |                     cursor: "pointer",
439 |                   }}
440 |                   onClick={() => handleMoveClick(move)}
441 |                 />
442 |               ))}
443 |             </>
444 |           )}
445 |         </div>
446 |         <button
447 |           onClick={() => {
448 |             window.location.href = '/';
449 |           }}
450 |           style={{
451 |             position: 'absolute',
452 |             top: '20px',
453 |             left: '20px',
454 |             background: 'none',
455 |             border: 'none',
456 |             cursor: 'pointer',
457 |             zIndex: 2,
458 |           }}
459 |         >
460 |           <img
461 |             src={Return}
462 |             alt="Return"
463 |             style={{
464 |               width: '50px',
465 |               height: '50px',
466 |             }}
467 |           />
468 |         </button>
469 |       </div>
470 |     </div>
471 |   );
472 | }
473 | 
474 | export default Checker;


--------------------------------------------------------------------------------
/client/src/components/CreateGame.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { useNavigate } from 'react-router-dom';
  3 | import { SDK } from "@dojoengine/sdk";
  4 | import { schema } from "../bindings.ts";
  5 | import ControllerButton from '../connector/ControllerButton';
  6 | import { useAccount } from '@starknet-react/core';
  7 | 
  8 | import LoadingCreate from "../assets/LoadingCreate.png";
  9 | import ChoicePlayer from "../assets/ChoicePlayer.png";
 10 | import ButtonCreate from "../assets/ButtonCreate.png";
 11 | import InitGameBackground from "../assets/InitGameBackground.png";
 12 | import Return from "../assets/Return.png";
 13 | import Player1 from "../assets/Player1_0.png";
 14 | import Player2 from "../assets/Player2_0.png";
 15 | import Player3 from "../assets/Player3_0.png";
 16 | import Player4 from "../assets/Player4_0.png";
 17 | import { useDojo } from '../hooks/useDojo.tsx';
 18 | 
 19 | function CreateGame({ }: { sdk: SDK<typeof schema> }) {
 20 |   const { account: burner } = useDojo();
 21 |   const {account} = useAccount();
 22 |   const navigate = useNavigate();
 23 |   const [selectedPlayer, setSelectedPlayer] = useState<number | null>(null);
 24 |   const [error, setError] = useState<string | null>(null);
 25 |   const [isProcessing, setIsProcessing] = useState(false);
 26 | 
 27 |   const activeAccount = account || burner.account;
 28 | 
 29 |   useEffect(() => {
 30 |     if (!activeAccount.address) {
 31 |       navigate('/');
 32 |     }
 33 |   }, [activeAccount, navigate]);
 34 | 
 35 |   const handlePlayerSelect = (playerIndex: number) => {
 36 |     setSelectedPlayer(playerIndex);
 37 |     setError(null);
 38 |   };
 39 | 
 40 |   const handleCreateRoom = async () => {
 41 |     setIsProcessing(true);
 42 |     setError(null);
 43 | 
 44 |     try {
 45 |       if (!activeAccount.address) {
 46 |         throw new Error('Account not connected');
 47 |       }
 48 | 
 49 |       if (selectedPlayer === null) {
 50 |         throw new Error('Please select a player avatar');
 51 |       }
 52 | 
 53 |       localStorage.setItem('selectedPlayer', selectedPlayer.toString());
 54 |       localStorage.setItem('playerAddress', activeAccount.address);
 55 | 
 56 |       navigate('/checkers');
 57 |     } catch (error) {
 58 |       console.error("Error creating game:", error);
 59 |       setError(error instanceof Error ? error.message : 'Failed to create game');
 60 |     } finally {
 61 |       setIsProcessing(false);
 62 |     }
 63 |   };
 64 | 
 65 |   const playerImages = [Player1, Player2, Player3, Player4];
 66 | 
 67 |   return (
 68 |     <div
 69 |       style={{
 70 |         backgroundImage: `url(${InitGameBackground})`,
 71 |         backgroundSize: "cover",
 72 |         backgroundPosition: "center",
 73 |         height: "100vh",
 74 |         position: "relative",
 75 |         overflow: "hidden",
 76 |       }}>
 77 |       <div
 78 |         style={{
 79 |           position: "absolute",
 80 |           top: 0,
 81 |           left: 0,
 82 |           right: 0,
 83 |           bottom: 0,
 84 |           backgroundColor: "rgba(0, 0, 0, 0.5)",
 85 |           zIndex: 0,
 86 |         }}
 87 |       />
 88 | 
 89 |       <button
 90 |         onClick={() => {
 91 |           window.location.href = "/joinroom";
 92 |         }}
 93 |         style={{
 94 |           position: "absolute",
 95 |           top: "20px",
 96 |           left: "20px",
 97 |           background: "none",
 98 |           border: "none",
 99 |           cursor: "pointer",
100 |           zIndex: 2,
101 |         }}>
102 |         <img
103 |           src={Return}
104 |           alt="Return"
105 |           style={{
106 |             width: "50px",
107 |             height: "50px",
108 |           }}
109 |         />
110 |       </button>
111 | 
112 |       <div
113 |         style={{
114 |           position: "absolute",
115 |           top: "20px",
116 |           right: "20px",
117 |           display: "flex",
118 |           gap: "20px",
119 |           zIndex: 2,
120 |         }}>
121 |         <ControllerButton />
122 |       </div>
123 | 
124 |       <div
125 |         style={{
126 |           position: "absolute",
127 |           top: "150px",
128 |           left: "16%",
129 |           transform: "translateX(-50%)",
130 |           color: "white",
131 |           fontSize: "32px",
132 |           fontWeight: "bold",
133 |           zIndex: 5,
134 |         }}>
135 |         CREATE GAME
136 |       </div>
137 | 
138 |       <div
139 |         style={{
140 |           position: "absolute",
141 |           top: "200px",
142 |           left: "50%",
143 |           transform: "translateX(-50%)",
144 |           width: "1500px",
145 |           height: "10px",
146 |           zIndex: 5,
147 |         }}>
148 |         <img
149 |           src={LoadingCreate}
150 |           alt="Loading"
151 |           style={{
152 |             width: "100%",
153 |             height: "100%",
154 |           }}
155 |         />
156 |       </div>
157 | 
158 |       <div
159 |         style={{
160 |           position: "absolute",
161 |           top: "390px",
162 |           left: "46%",
163 |           transform: "translateX(-50%)",
164 |           display: "flex",
165 |           flexDirection: "column",
166 |           alignItems: "center",
167 |           zIndex: 5,
168 |         }}>
169 |         <span
170 |           style={{
171 |             color: "white",
172 |             fontSize: "24px",
173 |             fontWeight: "bold",
174 |             marginBottom: "-40px",
175 |           }}>
176 |           CHOICE AVATAR
177 |         </span>
178 |         <img
179 |           src={ChoicePlayer}
180 |           alt="Choice Player"
181 |           style={{
182 |             width: "300px",
183 |             height: "40px",
184 |           }}
185 |         />
186 |       </div>
187 | 
188 |       <div
189 |         style={{
190 |           position: "absolute",
191 |           top: "450px",
192 |           left: "50%",
193 |           transform: "translateX(-50%)",
194 |           display: "flex",
195 |           gap: "20px",
196 |           zIndex: 2,
197 |         }}>
198 |         {playerImages.map((playerImage, index) => (
199 |           <div
200 |             key={index}
201 |             onClick={() => handlePlayerSelect(index)}
202 |             style={{
203 |               width: "100px",
204 |               height: "100px",
205 |               borderRadius: "10px",
206 |               border: `3px solid ${
207 |                 selectedPlayer === index ? "#EE7921" : "#520066"
208 |               }`,
209 |               backgroundImage: `url(${playerImage})`,
210 |               backgroundSize: "cover",
211 |               cursor: "pointer",
212 |             }}
213 |           />
214 |         ))}
215 |       </div>
216 | 
217 |       {error && (
218 |         <div
219 |           style={{
220 |             position: "absolute",
221 |             bottom: "300px",
222 |             left: "50%",
223 |             transform: "translateX(-50%)",
224 |             color: "#ff4444",
225 |             fontSize: "18px",
226 |             zIndex: 5,
227 |           }}>
228 |           {error}
229 |         </div>
230 |       )}
231 | 
232 |       <button
233 |         onClick={handleCreateRoom}
234 |         disabled={isProcessing || selectedPlayer === null}
235 |         style={{
236 |           position: "absolute",
237 |           bottom: "200px",
238 |           left: "50%",
239 |           transform: "translateX(-50%)",
240 |           backgroundImage: `url(${ButtonCreate})`,
241 |           backgroundSize: "cover",
242 |           color: "white",
243 |           padding: "46px 279px",
244 |           borderRadius: "5px",
245 |           fontWeight: "bold",
246 |           cursor: isProcessing || selectedPlayer === null ? "not-allowed" : "pointer",
247 |           border: "none",
248 |           zIndex: 2,
249 |           opacity: isProcessing || selectedPlayer === null ? 0.7 : 1,
250 |         }}>
251 |       </button>
252 |     </div>
253 |   );
254 | }
255 | 
256 | export default CreateGame;


--------------------------------------------------------------------------------
/client/src/components/GameOver.tsx:
--------------------------------------------------------------------------------
 1 | import React from "react";
 2 | import GameOver1 from "../assets/GameOver1.png";
 3 | import GameOver2 from "../assets/GameOver2.png"; 
 4 | 
 5 | const GameOver: React.FC = () => {
 6 |     return (
 7 |         <div
 8 |             className="absolute inset-0 flex flex-col items-center justify-center space-y-4"
 9 |             style={{
10 |                 backgroundColor: "rgba(0, 0, 0, 0.6)",
11 |                 zIndex: 1000, 
12 |             }}
13 |         >
14 |             <img
15 |                 src={GameOver1}
16 |                 alt="Game Over"
17 |                 className="w-[300px] h-auto" 
18 |             />
19 |             <img
20 |                 src={GameOver2} 
21 |                 alt="Game Over 2"
22 |                 className="w-[300px] h-auto" 
23 |             />
24 |         </div>
25 |     );
26 | };
27 | 
28 | export default GameOver;
29 | 


--------------------------------------------------------------------------------
/client/src/components/Home.tsx:
--------------------------------------------------------------------------------
  1 | import React from 'react';
  2 | import Header from './Header';
  3 | import checkersImage from '../assets/Checkers.png';
  4 | import { useNavigate } from 'react-router-dom';
  5 | 
  6 | const Home: React.FC = () => {
  7 |     const navigate = useNavigate();
  8 | 
  9 |     const handleSignUp = () => {
 10 |         navigate('/initgame');
 11 |     };
 12 | 
 13 |     return (
 14 |         <div
 15 |             style={{
 16 |                 width: '100%',
 17 |                 height: '100vh',
 18 |                 background: '#0F151A',
 19 |                 display: 'flex',
 20 |                 flexDirection: 'column',
 21 |                 alignItems: 'center',
 22 |                 justifyContent: 'flex-start',
 23 |             }}
 24 |         >
 25 |             <Header />
 26 |             <div
 27 |                 style={{
 28 |                     width: '100%',
 29 |                     maxWidth: 1600,
 30 |                     height: '60%',
 31 |                     padding: '56px 5%',
 32 |                     background: 'linear-gradient(144deg, black 29%, #0F151A 47%, #0E1318 78%, #040507 100%)',
 33 |                     borderRadius: 20,
 34 |                     border: '1px #6E6E6E solid',
 35 |                     display: 'flex',
 36 |                     flexDirection: 'row',
 37 |                     justifyContent: 'space-between',
 38 |                     alignItems: 'center',
 39 |                     position: 'relative',
 40 |                 }}
 41 |             >
 42 |                 <div style={{ flex: 1, flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 62, display: 'flex' }}>
 43 |                     <div style={{ alignSelf: 'stretch', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 26, display: 'flex' }}>
 44 |                         <div style={{ alignSelf: 'stretch', color: 'white', fontSize: 48, fontFamily: 'Larsseit', fontWeight: '700', textTransform: 'uppercase', lineHeight: '55.97px', wordWrap: 'break-word' }}>
 45 |                             CHECKERS
 46 |                         </div>
 47 |                         <div style={{ alignSelf: 'stretch', color: 'white', fontSize: 18, fontFamily: 'Larsseit', fontWeight: '500', lineHeight: '31px', wordWrap: 'break-word' }}>
 48 |                             Strategy board game for two players, in which the players race their two tokens from start to finish according to the rolls of a single die.
 49 |                         </div>
 50 |                     </div>
 51 |                     <div style={{ flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 16, display: 'flex' }}>
 52 |                         <div style={{ width: 301, height: 77.21, position: 'relative' }}>
 53 |                             <div style={{ width: 249, height: 70.60, left: 52, top: 0, position: 'absolute' }}>
 54 |                                 <div style={{ width: 249, height: 67, left: 0, top: 3.60, position: 'absolute', background: 'linear-gradient(263deg, #3ADCFF 0%, rgba(58, 220, 255, 0) 100%)', boxShadow: '82.44px 82.44px 82.44px', filter: 'blur(82.44px)' }} />
 55 |                                 <div style={{ width: 143, height: 70, left: 100, top: 0, position: 'absolute', background: 'linear-gradient(263deg, #3ADCFF 0%, rgba(58, 220, 255, 0) 100%)', boxShadow: '30.92px 30.92px 30.92px', filter: 'blur(30.92px)' }} />
 56 |                                 <div style={{ width: 143, height: 70, left: 100, top: 0, position: 'absolute', background: 'linear-gradient(263deg, #3ADCFF 0%, rgba(58, 220, 255, 0) 100%)', boxShadow: '10.31px 10.31px 10.31px', filter: 'blur(10.31px)' }} />
 57 |                             </div>
 58 |                             <div style={{ width: 288, height: 74, left: 0, top: 3.21, position: 'absolute', borderRadius: 20, border: '1.29px #3ADCFF solid' }} />
 59 |                             <div
 60 |                                 onClick={handleSignUp}
 61 |                                 style={{
 62 |                                     width: 288,
 63 |                                     height: 73,
 64 |                                     padding: '20px 62px',
 65 |                                     left: 0,
 66 |                                     top: 3.79,
 67 |                                     position: 'absolute',
 68 |                                     background: '#01111F',
 69 |                                     borderRadius: 20,
 70 |                                     border: '2.58px rgba(255, 255, 255, 0.12) solid',
 71 |                                     justifyContent: 'center',
 72 |                                     alignItems: 'center',
 73 |                                     display: 'flex',
 74 |                                     cursor: 'pointer',
 75 |                                 }}
 76 |                             >
 77 |                                 <div
 78 |                                     style={{
 79 |                                         color: 'white',
 80 |                                         fontSize: 20,
 81 |                                         fontFamily: 'Arial',
 82 |                                         fontWeight: '400',
 83 |                                         textTransform: 'uppercase',
 84 |                                         lineHeight: '28.80px',
 85 |                                         wordWrap: 'break-word',
 86 |                                     }}
 87 |                                 >
 88 |                                    Play NOW
 89 |                                 </div>
 90 |                             </div>
 91 |                         </div>
 92 |                         <div>
 93 |                             <span style={{ color: '#CACACA', fontSize: 20, fontFamily: 'Montserrat', fontWeight: '400', wordWrap: 'break-word' }}>
 94 |                                 Already have an account?
 95 |                             </span>
 96 |                             <span style={{ color: '#00ECFF', fontSize: 20, fontFamily: 'Montserrat', fontWeight: '700', wordWrap: 'break-word' }}>
 97 |                                 Login
 98 |                             </span>
 99 |                         </div>
100 |                     </div>
101 |                 </div>
102 |                 <div style={{ width: '50%', height: '296px', position: 'relative' }}>
103 |                     <div style={{ width: '100%', height: '100%', left: 0, top: 0, position: 'absolute', background: '#D9D9D9', borderRadius: 24 }} />
104 |                     <img
105 |                         style={{
106 |                             width: '100%',
107 |                             height: 'auto',
108 |                             borderRadius: 24,
109 |                             position: 'absolute',
110 |                             top: 0,
111 |                             left: 0,
112 |                         }}
113 |                         src={checkersImage}
114 |                         alt="Checkers"
115 |                     />
116 |                 </div>
117 |             </div>
118 |         </div>
119 |     );
120 | };
121 | 
122 | export default Home;
123 | 


--------------------------------------------------------------------------------
/client/src/components/InitGame.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useNavigate } from 'react-router-dom';
  3 | import { SDK, createDojoStore } from "@dojoengine/sdk";
  4 | import { schema } from "../bindings.ts";
  5 | import { useSystemCalls } from "../hooks/useSystemCalls.ts";
  6 | import { useDojo } from "../hooks/useDojo.tsx";
  7 | import ControllerButton from '../connector/ControllerButton';
  8 | import CreateBurner from '../connector/CreateBurner.tsx';
  9 | 
 10 | import InitGameBackground from "../assets/InitGameBackground.png";
 11 | import CreateGame from "../assets/CreateGame.png";
 12 | import CreateGame2 from "../assets/CreateGame2.png";
 13 | import JoinGame from "../assets/JoinGame.png";
 14 | import JoinGame2 from "../assets/JoinGame2.png";
 15 | import Return from "../assets/Return.png";
 16 | import Title from '../assets/Title.png';
 17 | import { useAccount } from '@starknet-react/core';
 18 | 
 19 | export const useDojoStore = createDojoStore<typeof schema>();
 20 | 
 21 | function InitGame({ }: { sdk: SDK<typeof schema> }) {
 22 |    const { account: burner } = useDojo();
 23 |    const {account} = useAccount();
 24 |   const { getSessionId,createLobby } = useSystemCalls();
 25 |   const navigate = useNavigate();
 26 |   const [isHoveredCreate, setIsHoveredCreate] = useState(false);
 27 |   const [isHoveredJoin, setIsHoveredJoin] = useState(false);
 28 | 
 29 |   const activeAccount = account || burner;
 30 | 
 31 |   const handleCreateGame = async () => {
 32 |     try {
 33 |       if (activeAccount) {
 34 |       const lobby = await createLobby();
 35 |       const id = await getSessionId();
 36 |       console.log(lobby, "createLobby", id, "id");
 37 |         return id
 38 |       } else {
 39 |         console.warn("Account not connected");
 40 |       }
 41 |     } catch (error) {
 42 |       console.error("Error creating the game:", error);
 43 |     } finally {
 44 |       navigate("/joinroom");
 45 |     }
 46 |   };
 47 | 
 48 |   return (
 49 |     <div
 50 |       style={{
 51 |         backgroundImage: `url(${InitGameBackground})`,
 52 |         backgroundSize: "cover",
 53 |         backgroundPosition: "center",
 54 |         height: "100vh",
 55 |         display: "flex",
 56 |         flexDirection: "column",
 57 |         alignItems: "center",
 58 |         justifyContent: "flex-start",
 59 |         position: "relative",
 60 |         overflow: "hidden",
 61 |       }}
 62 |     >
 63 |       <div
 64 |         style={{
 65 |           position: 'absolute',
 66 |           top: 0,
 67 |           left: 0,
 68 |           right: 0,
 69 |           bottom: 0,
 70 |           backgroundColor: 'rgba(0, 0, 0, 0.5)',
 71 |           zIndex: 0,
 72 |         }}
 73 |       />
 74 | 
 75 |       <img
 76 |         src={Title}
 77 |         alt="Título"
 78 |         style={{
 79 |           zIndex: 2,
 80 |           marginTop: '60px',
 81 |           width: 'auto',
 82 |           height: '100px',
 83 |         }}
 84 |       />
 85 | 
 86 |       <button
 87 |         onClick={() => {
 88 |           window.location.href = 'http://localhost:3000';
 89 |         }}
 90 |         style={{
 91 |           position: 'absolute',
 92 |           top: '20px',
 93 |           left: '20px',
 94 |           background: 'none',
 95 |           border: 'none',
 96 |           cursor: 'pointer',
 97 |           zIndex: 2,
 98 |         }}
 99 |       >
100 |         <img
101 |           src={Return}
102 |           alt="Return"
103 |           style={{
104 |             width: '50px',
105 |             height: '50px',
106 |           }}
107 |         />
108 |       </button>
109 | 
110 |       <div
111 |         style={{
112 |           position: 'absolute',
113 |           top: '20px',
114 |           right: '20px',
115 |           display: 'flex',
116 |           gap: '20px',
117 |           zIndex: 2,
118 |         }}
119 |       >
120 |         <CreateBurner/>
121 |         <ControllerButton />
122 |       </div>
123 | 
124 |       {/* Button to create game */}
125 |       <img
126 |         src={isHoveredCreate ? CreateGame2 : CreateGame}
127 |         alt={account || burner ? "Crear Juego" : "Conectar cuenta"}
128 |          onClick={account || burner ? handleCreateGame : undefined}
129 |         onMouseEnter={() => setIsHoveredCreate(true)}
130 |         onMouseLeave={() => setIsHoveredCreate(false)}
131 |         style={{
132 |           position: 'absolute',
133 |           top: '40%',
134 |           left: '50%',
135 |           transform: `translate(-50%, -50%) scale(${isHoveredCreate ? 1.3 : 1})`, // Zoom hacia adelante
136 |           width: '700px',
137 |           height: 'auto',
138 |           zIndex: 2,
139 |            cursor: account || burner ? 'pointer' : 'not-allowed',
140 |           transition: 'transform 0.2s',
141 |           opacity: account || burner ? 1 : 0.5,
142 |         }}
143 |       />
144 | 
145 |       {/* Button to join game */}
146 |       <img
147 |         src={isHoveredJoin ? JoinGame2 : JoinGame}
148 |         alt="join game"
149 |         onMouseEnter={() => setIsHoveredJoin(true)}
150 |         onMouseLeave={() => setIsHoveredJoin(false)}
151 |         style={{
152 |           position: 'absolute',
153 |           top: '60%',
154 |           left: '50%',
155 |           transform: `translate(-50%, -50%) scale(${isHoveredJoin ? 1.3 : 1})`,
156 |           width: '700px',
157 |           height: 'auto',
158 |           zIndex: 2,
159 |           cursor: account || burner ? 'pointer': '',
160 |           transition: 'transform 0.2s',
161 |         }}
162 |       />
163 |     </div>
164 |   );
165 | }
166 | 
167 | export default InitGame;


--------------------------------------------------------------------------------
/client/src/components/InitPieces.tsx:
--------------------------------------------------------------------------------
 1 | // InitPieces.ts
 2 | import { Position } from "../bindings";
 3 | 
 4 | export type Coordinates = {
 5 |   row: number;
 6 |   col: number;
 7 |   capturedPiece?: { row: number; col: number };
 8 |   isCapture?: boolean;
 9 | };
10 | 
11 | export interface Piece {
12 |   player: string;
13 |   position: Position;
14 | 
15 |   row: number;
16 |   col: number;
17 |   // coordinates: Coordinates;
18 | 
19 |   is_king: boolean;
20 |   is_alive: boolean;
21 | }
22 | 
23 | export interface PieceUI {
24 |   id: number;
25 |   piece: Piece;
26 | };
27 | 
28 | export const createInitialPieces = (playerAddress: string) => {
29 | 
30 |   const initialOrangePieces: PieceUI[] = [
31 |     { id: 1, piece: { player: playerAddress, position: Position.Down, row: 7, col: 0, is_king: false, is_alive: true}},
32 |     { id: 2, piece: { player: playerAddress, position: Position.Down, row: 7, col: 2, is_king: false, is_alive: true}},
33 |     { id: 3, piece: { player: playerAddress, position: Position.Down, row: 7, col: 4, is_king: false, is_alive: true}},
34 |     { id: 4, piece: { player: playerAddress, position: Position.Down, row: 7, col: 6, is_king: false, is_alive: true}},
35 |     { id: 5, piece: { player: playerAddress, position: Position.Down, row: 6, col: 1, is_king: false, is_alive: true}},
36 |     { id: 6, piece: { player: playerAddress, position: Position.Down, row: 6, col: 3, is_king: false, is_alive: true}},
37 |     { id: 7, piece: { player: playerAddress, position: Position.Down, row: 6, col: 5, is_king: false, is_alive: true}},
38 |     { id: 8, piece: { player: playerAddress, position: Position.Down, row: 6, col: 7, is_king: false, is_alive: true}},
39 |     { id: 9, piece: { player: playerAddress, position: Position.Down, row: 5, col: 0, is_king: false, is_alive: true}},
40 |     { id: 10, piece: { player: playerAddress, position: Position.Down, row: 5, col: 2, is_king: false, is_alive: true}},
41 |     { id: 11, piece: { player: playerAddress, position: Position.Down, row: 5, col: 4, is_king: false, is_alive: true}},
42 |     { id: 12, piece: { player: playerAddress, position: Position.Down, row: 5, col: 6, is_king: false, is_alive: true}},
43 |   ];
44 | 
45 |   const initialBlackPieces: PieceUI[] = [
46 |     { id: 13, piece: { player: playerAddress, position: Position.Up, row: 2, col: 1, is_king: false, is_alive: true } },
47 |     { id: 14, piece: { player: playerAddress, position: Position.Up, row: 2, col: 3, is_king: false, is_alive: true } },
48 |     { id: 15, piece: { player: playerAddress, position: Position.Up, row: 2, col: 5, is_king: false, is_alive: true } },
49 |     { id: 16, piece: { player: playerAddress, position: Position.Up, row: 2, col: 7, is_king: false, is_alive: true } },
50 |     { id: 17, piece: { player: playerAddress, position: Position.Up, row: 1, col: 0, is_king: false, is_alive: true } },
51 |     { id: 18, piece: { player: playerAddress, position: Position.Up, row: 1, col: 2, is_king: false, is_alive: true } },
52 |     { id: 19, piece: { player: playerAddress, position: Position.Up, row: 1, col: 4, is_king: false, is_alive: true } },
53 |     { id: 20, piece: { player: playerAddress, position: Position.Up, row: 1, col: 6, is_king: false, is_alive: true } },
54 |     { id: 21, piece: { player: playerAddress, position: Position.Up, row: 0, col: 1, is_king: false, is_alive: true } },
55 |     { id: 22, piece: { player: playerAddress, position: Position.Up, row: 0, col: 3, is_king: false, is_alive: true } },
56 |     { id: 23, piece: { player: playerAddress, position: Position.Up, row: 0, col: 5, is_king: false, is_alive: true } },
57 |     { id: 24, piece: { player: playerAddress, position: Position.Up, row: 0, col: 7, is_king: false, is_alive: true } },
58 |   ];
59 |   
60 | 
61 |   return {
62 |     initialBlackPieces,
63 |     initialOrangePieces
64 |   };
65 | };
66 | 
67 | export { Position };
68 | 


--------------------------------------------------------------------------------
/client/src/components/JoinRoom.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from "react";
  2 | import { useNavigate } from "react-router-dom";
  3 | import { SDK } from "@dojoengine/sdk";
  4 | import { schema } from "../bindings.ts";
  5 | import { useDojo } from "../hooks/useDojo.tsx";
  6 | import { useAccount } from "@starknet-react/core";
  7 | import { Account } from "starknet";
  8 | import ControllerButton from "../connector/ControllerButton";
  9 | import CreateBurner from "../connector/CreateBurner";
 10 | 
 11 | import LoadingRoom from "../assets/LoadingCreate.png";
 12 | import InitGameBackground from "../assets/InitGameBackground.png";
 13 | import Return from "../assets/Return.png";
 14 | import JoinGameRectangule from "../assets/JoinGameRectangule.png";
 15 | import ConfirmJoin from "../assets/ConfirmJoin.png";
 16 | 
 17 | function JoinRoom({}: { sdk: SDK<typeof schema> }) {
 18 |   const {
 19 |     setup: { setupWorld },
 20 |     account: { account: burner },
 21 |   } = useDojo();
 22 |   const { account } = useAccount();
 23 |   const navigate = useNavigate();
 24 |   const [error, setError] = useState<string | null>(null);
 25 |   const [isProcessing, setIsProcessing] = useState(false);
 26 | 
 27 |   const activeAccount = account || burner;
 28 | 
 29 |   useEffect(() => {
 30 |     if (!activeAccount?.address) {
 31 |       navigate("/");
 32 |     }
 33 |   }, [activeAccount, navigate]);
 34 | 
 35 |   const joinRoom = async () => {
 36 |     setIsProcessing(true);
 37 |     setError(null);
 38 | 
 39 |     try {
 40 |       if (!activeAccount?.address) {
 41 |         throw new Error("Account not connected");
 42 |       }
 43 | 
 44 |       await (await setupWorld.actions).joinLobby(activeAccount as Account, 0);
 45 |       localStorage.setItem("playerAddress", activeAccount.address);
 46 |       navigate("/creategame");
 47 |     } catch (error) {
 48 |       console.error("Error joining room:", error);
 49 |       setError(error instanceof Error ? error.message : "Failed to join room");
 50 |     } finally {
 51 |       setIsProcessing(false);
 52 |     }
 53 |   };
 54 | 
 55 |   return (
 56 |     <div
 57 |       style={{
 58 |         backgroundImage: `url(${InitGameBackground})`,
 59 |         backgroundSize: "cover",
 60 |         backgroundPosition: "center",
 61 |         height: "100vh",
 62 |         position: "relative",
 63 |         overflow: "hidden",
 64 |       }}
 65 |     >
 66 |       <div
 67 |         style={{
 68 |           position: "absolute",
 69 |           top: 0,
 70 |           left: 0,
 71 |           right: 0,
 72 |           bottom: 0,
 73 |           backgroundColor: "rgba(0, 0, 0, 0.5)",
 74 |           zIndex: 0,
 75 |         }}
 76 |       />
 77 | 
 78 |       <button
 79 |         onClick={() => {
 80 |           window.location.href = "/";
 81 |         }}
 82 |         style={{
 83 |           position: "absolute",
 84 |           top: "20px",
 85 |           left: "20px",
 86 |           background: "none",
 87 |           border: "none",
 88 |           cursor: "pointer",
 89 |           zIndex: 2,
 90 |         }}
 91 |       >
 92 |         <img
 93 |           src={Return}
 94 |           alt="Return"
 95 |           style={{
 96 |             width: "50px",
 97 |             height: "50px",
 98 |           }}
 99 |         />
100 |       </button>
101 | 
102 |       <div
103 |         style={{
104 |           position: "absolute",
105 |           top: "20px",
106 |           right: "20px",
107 |           display: "flex",
108 |           gap: "20px",
109 |           zIndex: 2,
110 |         }}
111 |       >
112 |         <CreateBurner />
113 |         <ControllerButton />
114 |       </div>
115 | 
116 |       <div
117 |         style={{
118 |           position: "absolute",
119 |           top: "150px",
120 |           left: "16%",
121 |           transform: "translateX(-50%)",
122 |           color: "white",
123 |           fontSize: "32px",
124 |           fontWeight: "bold",
125 |           zIndex: 5,
126 |         }}
127 |       >
128 |         JOIN ROOM
129 |       </div>
130 | 
131 |       <div
132 |         style={{
133 |           position: "absolute",
134 |           top: "200px",
135 |           left: "50%",
136 |           transform: "translateX(-50%)",
137 |           width: "1500px",
138 |           height: "10px",
139 |           zIndex: 5,
140 |         }}
141 |       >
142 |         <img
143 |           src={LoadingRoom}
144 |           alt="Loading"
145 |           style={{
146 |             width: "100%",
147 |             height: "100%",
148 |           }}
149 |         />
150 |       </div>
151 | 
152 |       <div
153 |         style={{
154 |           position: "absolute",
155 |           bottom: "590px",
156 |           left: "31%",
157 |           transform: "translateX(-50%)",
158 |           color: "white",
159 |           fontSize: "24px",
160 |           fontWeight: "bold",
161 |           zIndex: 5,
162 |         }}
163 |       >
164 |         Room ID
165 |       </div>
166 | 
167 |       <div
168 |         style={{
169 |           position: "absolute",
170 |           bottom: "450px",
171 |           left: "50%",
172 |           transform: "translateX(-50%)",
173 |           width: "840px",
174 |           height: "132px",
175 |           backgroundImage: `url(${JoinGameRectangule})`,
176 |           backgroundSize: "cover",
177 |           display: "flex",
178 |           alignItems: "center",
179 |           justifyContent: "center",
180 |           color: "white",
181 |           fontSize: "24px",
182 |           fontWeight: "bold",
183 |           zIndex: 5,
184 |         }}
185 |       >
186 |         0
187 |       </div>
188 | 
189 |       {error && (
190 |         <div
191 |           style={{
192 |             position: "absolute",
193 |             bottom: "300px",
194 |             left: "50%",
195 |             transform: "translateX(-50%)",
196 |             color: "#ff4444",
197 |             fontSize: "18px",
198 |             zIndex: 5,
199 |           }}
200 |         >
201 |           {error}
202 |         </div>
203 |       )}
204 | 
205 |       <button
206 |         onClick={joinRoom}
207 |         disabled={isProcessing || !activeAccount?.address}
208 |         style={{
209 |           position: "absolute",
210 |           bottom: "180px",
211 |           left: "50%",
212 |           transform: "translateX(-50%)",
213 |           backgroundImage: `url(${ConfirmJoin})`,
214 |           backgroundSize: "cover",
215 |           width: "700px",
216 |           height: "96px",
217 |           color: "white",
218 |           fontSize: "24px",
219 |           fontWeight: "bold",
220 |           cursor:
221 |             isProcessing || !activeAccount?.address ? "not-allowed" : "pointer",
222 |           border: "none",
223 |           zIndex: 5,
224 |           opacity: isProcessing || !activeAccount?.address ? 0.7 : 1,
225 |         }}
226 |       >
227 |         {isProcessing ? "Processing..." : "Confirm"}
228 |       </button>
229 |     </div>
230 |   );
231 | }
232 | 
233 | export default JoinRoom;
234 | 


--------------------------------------------------------------------------------
/client/src/components/QueenPiece.tsx:
--------------------------------------------------------------------------------
 1 | import React, { useEffect, useState } from "react";
 2 | import QueenBlack from "../assets/QueenBlack.svg";
 3 | import QueenOrange from "../assets/QueenOrange.svg";
 4 | import PieceBlack from "../assets/PieceBlack.svg";
 5 | import PieceOrange from "../assets/PieceOrange.svg";
 6 | import { PieceUI, Position, Coordinates } from "./InitPieces";
 7 | 
 8 | interface QueenPieceProps {
 9 |   piece: PieceUI;
10 |   cellSize: number;
11 |   onMove: (move: Coordinates) => void;
12 | }
13 | 
14 | const QueenPiece: React.FC<QueenPieceProps> = ({ piece, cellSize, onMove }) => {
15 |   const [isQueen, setIsQueen] = useState(piece.piece.is_king);
16 | 
17 |   useEffect(() => {
18 |     if (!isQueen) {
19 |       const isFinalRow =
20 |         (piece.piece.position === Position.Up && piece.piece.row === 7) ||
21 |         (piece.piece.position === Position.Down && piece.piece.row === 0);
22 |       if (isFinalRow) {
23 |         setIsQueen(true);
24 |       }
25 |     }
26 |   }, [piece.piece.row, piece.piece.position, isQueen]);
27 | 
28 |   const handleMove = (move: Coordinates) => {
29 |     onMove(move);
30 |   };
31 | 
32 |   return (
33 |     <img
34 |       src={isQueen ? (piece.piece.position === Position.Up ? QueenBlack : QueenOrange) : (piece.piece.position === Position.Up ? PieceBlack : PieceOrange)}
35 |       className="absolute"
36 |       style={{
37 |         left: `${piece.piece.col * cellSize + 63}px`,
38 |         top: `${piece.piece.row * cellSize + 65}px`,
39 |         cursor: "pointer",
40 |         width: "70px",
41 |         height: "70px",
42 |         border: isQueen ? "2px solid blue" : "none",
43 |       }}
44 |       onClick={() => handleMove({ row: piece.piece.row, col: piece.piece.col })}
45 |     />
46 |   );
47 | };
48 | 
49 | export default QueenPiece;
50 | 


--------------------------------------------------------------------------------
/client/src/components/Winner.tsx:
--------------------------------------------------------------------------------
 1 | import React from "react";
 2 | import Winner1 from "../assets/Winner1.png";
 3 | import Winner2 from "../assets/Winner2.png";
 4 | 
 5 | const Winner: React.FC = () => {
 6 |     return (
 7 |         <div
 8 |             className="absolute inset-0 flex flex-col items-center justify-center space-y-4"
 9 |             style={{
10 |                 backgroundColor: "rgba(0, 0, 0, 0.6)",
11 |                 zIndex: 1000, 
12 |             }}
13 |         >
14 |             <img
15 |                 src={Winner1}
16 |                 alt="Game Over"
17 |                 className="w-[600px] h-auto" 
18 |             />
19 |             <img
20 |                 src={Winner2} 
21 |                 alt="Game Over 2"
22 |                 className="w-[1200px] h-auto" 
23 |             />
24 |         </div>
25 |     );
26 | };
27 | 
28 | export default Winner;
29 | 


--------------------------------------------------------------------------------
/client/src/connector/ControllerButton.tsx:
--------------------------------------------------------------------------------
  1 | import React, { useEffect, useState } from "react";
  2 | import Cartridge from "../assets/Cartridge.png";
  3 | import { useAccount, useConnect, useDisconnect } from "@starknet-react/core";
  4 | 
  5 | const ControllerButton: React.FC = () => {
  6 | 
  7 |   const { connect, connectors } = useConnect();
  8 |   const { disconnect } = useDisconnect();
  9 |   const { address } = useAccount();
 10 | 
 11 |   const connector = connectors[0];
 12 |   const [userName, setUserName] = useState<string>();
 13 |   const [isConnected, setIsConnected] = useState(false);
 14 | 
 15 |   useEffect(() => {
 16 |     if (!address) return;
 17 |     (connector as any).username()?.then((name: string) => {
 18 |       setUserName(name), setIsConnected(true);
 19 |     });
 20 |   }, [address, connector]);
 21 | 
 22 |   const [isMenuOpen, setIsMenuOpen] = useState(false);
 23 | 
 24 |   const toggleMenu = () => {
 25 |     setIsMenuOpen(!isMenuOpen);
 26 |   };
 27 | 
 28 |   const slicedAddress = address
 29 |     ? `${address.slice(0, 6)}...${address.slice(-4)}`
 30 |     : "Connect";
 31 | 
 32 |   return (
 33 |     <div className="relative">
 34 |       <button
 35 |         onClick={
 36 |           isConnected ? toggleMenu : () => connect({ connector })
 37 |         }
 38 |         className="flex items-center rounded-md overflow-hidden font-bold cursor-pointer pl-2"
 39 |         style={{
 40 |           background: "linear-gradient(to right, #EE7921 40%, #520066 40%)",
 41 |           color: "white",
 42 |           width: "220px",
 43 |           height: "45px",
 44 |           borderRadius: "8px",
 45 |           boxShadow: "0px 4px 8px rgba(0, 0, 0, 0.1)",
 46 |         }}>
 47 |         <img
 48 |           src={Cartridge}
 49 |           alt="User Icon"
 50 |           className="h-8 w-8 rounded-full"
 51 |           style={{
 52 |             marginRight: "45px",
 53 |             marginLeft: "15px",
 54 |           }}
 55 |         />
 56 |         <span
 57 |           className="flex-grow text-center"
 58 |           style={{
 59 |             lineHeight: "45px",
 60 |             fontWeight: "bold",
 61 |           }}>
 62 |           {isConnected ? userName || "Connected" : "Connect"}
 63 |         </span>
 64 |         <span
 65 |           className={`transform transition-transform duration-300 ${
 66 |             isMenuOpen ? "rotate-180" : ""
 67 |           }`}
 68 |           style={{ marginRight: "10px" }}>
 69 |           ▼
 70 |         </span>
 71 |       </button>
 72 | 
 73 |       {isMenuOpen && isConnected && (
 74 |         <div
 75 |           className="absolute mt-2 p-4 rounded-md shadow-lg"
 76 |           style={{
 77 |             backgroundColor: "#2C2F33",
 78 |             border: "1px solid #520066",
 79 |             color: "white",
 80 |             width: "220px",
 81 |           }}>
 82 |           <div className="flex justify-between items-center mb-2">
 83 |             <p className="text-sm">
 84 |               <strong>User:</strong>{" "}
 85 |               <span style={{ fontWeight: "normal" }}>
 86 |                 {userName || "Sin nombre"}
 87 |               </span>
 88 |             </p>
 89 |           </div>
 90 | 
 91 |           <div className="flex items-center justify-between mb-2">
 92 |             <p className="text-sm font-semibold">
 93 |               <strong>Address:</strong>{" "}
 94 |               <span style={{ fontWeight: "normal" }}>
 95 |                 {slicedAddress || "Sin nombre"}
 96 |               </span>
 97 |             </p>
 98 |             <button
 99 |               onClick={() => navigator.clipboard.writeText(address || "")}
100 |               className="ml-2 text-white hover:text-gray-400 transition duration-300"
101 |               title="Copiar Dirección">
102 |               <svg
103 |                 xmlns="http://www.w3.org/2000/svg"
104 |                 className="h-4 w-4"
105 |                 fill="none"
106 |                 viewBox="0 0 24 24"
107 |                 stroke="currentColor">
108 |                 <path
109 |                   strokeLinecap="round"
110 |                   strokeLinejoin="round"
111 |                   strokeWidth="2"
112 |                   d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m4 4v6a2 2 0 01-2 2h-8a2 2 0 01-2-2v-6a2 2 0 012-2h8a2 2 0 012 2z"
113 |                 />
114 |               </svg>
115 |             </button>
116 |           </div>
117 | 
118 |           <button
119 |             onClick={() => {disconnect(), setIsConnected(false),toggleMenu()}}
120 |             className="w-full bg-[#520066] hover:bg-[#6A0080] text-white font-bold py-2 rounded-md transition duration-300 ease-in-out">
121 |             Disconnect
122 |           </button>
123 |         </div>
124 |       )}
125 |     </div>
126 |   );
127 | };
128 | 
129 | export default ControllerButton;
130 | 


--------------------------------------------------------------------------------
/client/src/connector/CreateBurner.tsx:
--------------------------------------------------------------------------------
  1 | import React, { useState, useEffect } from "react";
  2 | import { useDojo } from "../hooks/useDojo.tsx";
  3 | import ConnectWallet from "../assets/ConnectWallet.png";
  4 | 
  5 | const CreateBurner: React.FC = () => {
  6 |   const { account } = useDojo();
  7 |   const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  8 |   const [burnerList, setBurnerList] = useState<string[]>([]);
  9 | 
 10 |   useEffect(() => {
 11 |     if (account) {
 12 |       updateBurnerList();
 13 |     }
 14 |   }, [account]);
 15 | 
 16 |   const updateBurnerList = () => {
 17 |     if (account?.list) {
 18 |       setBurnerList(account.list().map(acc => acc.address));
 19 |     }
 20 |   };
 21 | 
 22 |   const handleCreateBurner = async () => {
 23 |     try {
 24 |       if (account?.create) {
 25 |         await account.create();
 26 |         updateBurnerList();
 27 |       }
 28 |     } catch (error) {
 29 |       console.error("Error creating burner:", error);
 30 |     }
 31 |   };
 32 | 
 33 |   const handleToggleDropdown = () => {
 34 |     setIsDropdownOpen(!isDropdownOpen);
 35 |   };
 36 | 
 37 |   const handleSelectAccount = (address: string) => {
 38 |     if (account?.select) {
 39 |       account.select(address);
 40 |       updateBurnerList();
 41 |       setIsDropdownOpen(false);
 42 |     }
 43 |   };
 44 | 
 45 |   const handleClearBurners = async () => {
 46 |     try {
 47 |       if (account?.clear) {
 48 |         await account.clear();
 49 |         account.select("");
 50 |         updateBurnerList();
 51 |         setIsDropdownOpen(false);
 52 |       }
 53 |     } catch (error) {
 54 |       console.error("Error clearing burners:", error);
 55 |     }
 56 |   };
 57 | 
 58 |   const slicedAddress = account?.account?.address
 59 |     ? `${account.account.address.slice(0, 5)}...${account.account.address.slice(-4)}`
 60 |     : "Connect Wallet";
 61 | 
 62 |   return (
 63 |     <div>
 64 |       <button
 65 |         onClick={handleToggleDropdown}
 66 |         className="flex items-center rounded-md overflow-hidden font-bold cursor-pointer pl-2"
 67 |         style={{
 68 |           background: "linear-gradient(to right, #EE7921 40%, #520066 40%)", // Gradient with orange and purple
 69 |           color: "white",
 70 |           width: "240px",
 71 |           height: "40px",
 72 |         }}
 73 |       >
 74 |         <img
 75 |           src={ConnectWallet}
 76 |           alt="Wallet Icon"
 77 |           className="h-6 w-6"
 78 |           style={{
 79 |             marginLeft: "30px",
 80 |           }}
 81 |         />
 82 |         <span
 83 |           className="flex-grow text-right" // Text aligned to the right
 84 |           style={{
 85 |             lineHeight: "40px",
 86 |             marginRight: "5px",
 87 |           }}
 88 |         >
 89 |           {slicedAddress}
 90 |         </span>
 91 |         <span
 92 |           className={`ml-2 transform transition-transform duration-300 ${
 93 |             isDropdownOpen ? "rotate-180" : ""
 94 |           }`}
 95 |           style={{
 96 |             color: "white",
 97 |             marginRight: "10px"
 98 |           }}
 99 |         >
100 |           ▼
101 |         </span>
102 |       </button>
103 | 
104 |       {isDropdownOpen && (
105 |         <div
106 |           className="absolute mt-2 w-64 z-10 rounded-md shadow-lg"
107 |           style={{
108 |             backgroundColor: "#2C2F33", 
109 |             border: "1px solid #520066", 
110 |             color: "white",
111 |           }}
112 |         >
113 |           <div className="p-4">
114 |             <label
115 |               htmlFor="signer-select"
116 |               className="block text-sm font-medium mb-2"
117 |               style={{ color: "#ffffff99" }}
118 |             >
119 |               Select Burner:
120 |             </label>
121 |             <select
122 |               id="signer-select"
123 |               className="w-full px-3 py-2 text-sm bg-white text-gray-800 rounded-md focus:outline-none"
124 |               value={account?.account?.address || ""}
125 |               onChange={(e) => handleSelectAccount(e.target.value)}
126 |             >
127 |               {burnerList.map((address, index) => (
128 |                 <option value={address} key={index} className="text-gray-800">
129 |                   {address}
130 |                 </option>
131 |               ))}
132 |             </select>
133 |           </div>
134 |           <div className="p-2 space-y-2">
135 |             <button
136 |               className="w-full px-4 py-2 bg-[#520066] hover:bg-[#6A0080] text-white font-semibold text-sm rounded-md transition duration-300 ease-in-out flex items-center justify-center space-x-2"
137 |               onClick={handleCreateBurner}
138 |             >
139 |               <span>Create New Burner</span>
140 |             </button>
141 |             <button
142 |               className="w-full px-4 py-2 bg-[#520066] hover:bg-[#6A0080] text-white font-semibold text-sm rounded-md transition duration-300 ease-in-out flex items-center justify-center space-x-2"
143 |               onClick={handleClearBurners}
144 |             >
145 |               <span>Clear Burners</span>
146 |             </button>
147 |           </div>
148 |         </div>
149 |       )}
150 |     </div>
151 |   );
152 | };
153 | 
154 | export default CreateBurner;


--------------------------------------------------------------------------------
/client/src/contracts.gen.ts:
--------------------------------------------------------------------------------
  1 | import { DojoProvider } from "@dojoengine/core";
  2 | import { Account } from "starknet";
  3 | import { Position, Piece } from "./models.gen.ts";
  4 | 
  5 | 
  6 | export function setupWorld(provider: DojoProvider) {
  7 | 
  8 | 
  9 | 	async function actions() {
 10 | 		const namespace = "checkers_marq";
 11 | 
 12 | 		const worldDispatcher = async (account: Account) => {
 13 | 			try {
 14 | 				return await provider.execute(
 15 | 
 16 | 					account,
 17 | 					{
 18 | 						contractName: "actions",
 19 | 						entrypoint: "world_dispatcher",
 20 | 						calldata: [],
 21 | 					}, namespace
 22 | 				);
 23 | 			} catch (error) {
 24 | 				console.error(error);
 25 | 			}
 26 | 		};
 27 | 
 28 | 		const dojoName = async (account: Account) => {
 29 | 			try {
 30 | 				return await provider.execute(
 31 | 
 32 | 					account,
 33 | 					{
 34 | 						contractName: "actions",
 35 | 						entrypoint: "dojo_name",
 36 | 						calldata: [],
 37 | 					}, namespace
 38 | 				);
 39 | 			} catch (error) {
 40 | 				console.error(error);
 41 | 			}
 42 | 		};
 43 | 
 44 | 		const createLobby = async (account: Account) => {
 45 | 			try {
 46 | 				return await provider.execute(
 47 | 					account,
 48 | 					{
 49 | 						contractName: "actions",
 50 | 						entrypoint: "create_lobby",
 51 | 						calldata: [],
 52 | 					}, namespace
 53 | 				);
 54 | 			} catch (error) {
 55 | 				console.error(error,'Error in create lobby');
 56 | 			}
 57 | 		};
 58 | 
 59 | 		const joinLobby = async (account: Account, sessionId: number) => {
 60 | 			try {
 61 | 				return await provider.execute(
 62 | 					account,
 63 | 					{
 64 | 						contractName: "actions",
 65 | 						entrypoint: "join_lobby",
 66 | 						calldata: [sessionId],
 67 | 					}, namespace
 68 | 				);
 69 | 			} catch (error) {
 70 | 				console.error(error);
 71 | 			}
 72 | 		};
 73 | 
 74 | 
 75 | 		const spawn = async (account: Account, player: string, position: Position, sessionId: number) => {
 76 | 			try {
 77 | 				return await provider.execute(
 78 | 
 79 | 					account,
 80 | 					{
 81 | 						contractName: "actions",
 82 | 						entrypoint: "spawn",
 83 | 						calldata: [player, position, sessionId],
 84 | 					}, namespace
 85 | 				);
 86 | 			} catch (error) {
 87 | 				console.error(error);
 88 | 			}
 89 | 		};
 90 | 
 91 | 
 92 | 		interface Coordinates {
 93 | 			row: number;
 94 | 			col: number;
 95 | 		}
 96 | 
 97 | 		const canChoosePiece = async (account: Account, position: Position,  coordinatesPosition: Coordinates, sessionId: number) => {
 98 | 			try {
 99 | 				return await provider.execute(
100 | 					account,
101 | 					{
102 | 						contractName: "actions",
103 | 						entrypoint: "can_choose_piece",
104 | 						calldata: [position, coordinatesPosition, sessionId],
105 | 					}, namespace
106 | 				);
107 | 			} catch (error) {
108 | 				console.error(error);
109 | 			}
110 | 		};
111 | 
112 | 		const movePiece = async (account: Account, currentPiece: Piece, move: Coordinates) => {
113 | 			try {
114 | 				return await provider.execute(
115 | 					account,
116 | 					{
117 | 						contractName: "actions",
118 | 						entrypoint: "move_piece",
119 | 							//sessionId=>0										//TODO:refactor this
120 | 						calldata: [0,currentPiece.row, currentPiece.col, currentPiece.player, currentPiece.position, currentPiece.is_king, currentPiece.is_alive, move.row, move.col],
121 | 					}, namespace
122 | 				);
123 | 			} catch (error) {
124 | 				console.error(error);
125 | 			}
126 | 		};
127 | 
128 | 			const getSessionId = async (account: Account) => {
129 | 				console.log(account,'account')
130 | 				console.log(provider,'provider')
131 | 				//TODO:FIX THIS CALL
132 |         try {
133 |           return await provider.execute(account, {
134 |             contractName: "actions",
135 |             entrypoint: "get_session_id",
136 |             calldata: [],
137 |           },namespace);
138 |         } catch (error) {
139 |           console.error(error);
140 |         }
141 |       };
142 | 
143 | 		return {
144 |       worldDispatcher,
145 |       dojoName,
146 |       createLobby,
147 |       joinLobby,
148 |       spawn,
149 |       canChoosePiece,
150 |       movePiece,
151 |       getSessionId,
152 |     };
153 | 	}
154 | 
155 | 	return {
156 | 		actions: actions(),
157 | 	};
158 | }


--------------------------------------------------------------------------------
/client/src/hooks/useDojo.tsx:
--------------------------------------------------------------------------------
 1 | import { useContext } from "react";
 2 | import { DojoContext } from "../DojoContext";
 3 | 
 4 | export const useDojo = () => {
 5 |     const context = useContext(DojoContext);
 6 | 
 7 |     if (!context) {
 8 |         throw new Error("The `useDojo` hook must be used within a `DojoProvider`");
 9 |     }
10 | 
11 |     const { account, ...setup } = context;
12 | 
13 |     return {
14 |         setup,
15 |         account,
16 |     };
17 | };


--------------------------------------------------------------------------------
/client/src/hooks/useDojoConnect.tsx:
--------------------------------------------------------------------------------
  1 | import { useEffect } from "react";
  2 | import { SDK, createDojoStore } from "@dojoengine/sdk";
  3 | import { addAddressPadding } from "starknet";
  4 | import { schema } from "../bindings.ts";
  5 | import { useDojo } from "./useDojo.tsx";
  6 | // import useModel from "./useModel.tsx";
  7 | import { useSystemCalls } from "./useSystemCalls.ts";
  8 | 
  9 | export const useDojoStore = createDojoStore<typeof schema>();
 10 | 
 11 | function useDojoConnect({ sdk }: { sdk: SDK<typeof schema> }) {
 12 |   const { account } = useDojo();
 13 |   
 14 | 
 15 |   const state = useDojoStore((state) => state);
 16 |   const entities = useDojoStore((state) => state.entities);
 17 |   
 18 | 
 19 |   const { spawn } = useSystemCalls();
 20 | 
 21 | 
 22 |   useEffect(() => {
 23 |     let unsubscribe: (() => void) | undefined;
 24 | 
 25 |     const subscribe = async () => {
 26 |       try {
 27 |         const subscription = await sdk.subscribeEntityQuery(
 28 |           {
 29 |             checkers_marq: {
 30 |               Piece: {
 31 |                 $: {
 32 |                   where: {
 33 |                     player: { $is: addAddressPadding(account.account.address) },
 34 |                   },
 35 |                 },
 36 |               },
 37 |             },
 38 |           },
 39 |           (response) => {
 40 |             if (response.error) {
 41 |               console.error("Error setting up entity sync:", response.error);
 42 |             } else if (response.data && response.data[0].entityId !== "0x0") {
 43 |               console.log("Subscribed:", response.data[0]);
 44 |               state.updateEntity(response.data[0]);
 45 |             }
 46 |           },
 47 |           { logging: true }
 48 |         );
 49 | 
 50 |         unsubscribe = () => subscription.cancel();
 51 |       } catch (error) {
 52 |         console.error("Subscription error:", error);
 53 |       }
 54 |     };
 55 | 
 56 |     subscribe();
 57 | 
 58 |     return () => {
 59 |       if (unsubscribe) {
 60 |         unsubscribe();
 61 |       }
 62 |     };
 63 |   }, [sdk, account?.account.address, state]);
 64 | 
 65 |   useEffect(() => {
 66 |     const fetchEntities = async () => {
 67 |       try {
 68 |         await sdk.getEntities(
 69 |           {
 70 |             checkers_marq: {
 71 |               Piece: {
 72 |                 $: {
 73 |                   where: { player: { $eq: addAddressPadding(account.account.address) } },
 74 |                 },
 75 |               },
 76 |             },
 77 |           },
 78 |           (response) => {
 79 |             if (response.error) {
 80 |               console.error("Error querying entities:", response.error.message);
 81 |               return;
 82 |             }
 83 |             if (response.data) {
 84 |               state.setEntities(response.data);
 85 |             }
 86 |           }
 87 |         );
 88 |       } catch (error) {
 89 |         console.error("Error querying entities:", error);
 90 |       }
 91 |     };
 92 | 
 93 |     fetchEntities();
 94 |   }, [sdk, account?.account.address, state]);
 95 | 
 96 | 
 97 |   return { spawn, account,  entities };
 98 | }
 99 | 
100 | export default useDojoConnect;


--------------------------------------------------------------------------------
/client/src/hooks/useModel.tsx:
--------------------------------------------------------------------------------
 1 | import { useDojoStore } from "../components/Checker";
 2 | import { schema } from "../bindings";
 3 | 
 4 | /**
 5 |  * Custom hook to retrieve a specific model for a given entityId within a specified namespace.
 6 |  *
 7 |  * @param entityId - The ID of the entity.
 8 |  * @param model - The model to retrieve, specified as a string in the format "namespace-modelName".
 9 |  * @returns The model structure if found, otherwise undefined.
10 |  */
11 | function useModel<N extends keyof typeof schema, M extends keyof typeof schema[N] & string>(
12 |     entityId: string,
13 |     model: `${N}-${M}`
14 | ): typeof schema[N][M] | undefined {
15 |     const [namespace, modelName] = model.split("-") as [N, M];
16 | 
17 |     // Select only the specific model data for the given entityId
18 |     const modelData = useDojoStore(
19 |         (state) =>
20 |             state.entities[entityId]?.models?.[namespace]?.[modelName] as
21 |                 | typeof schema[N][M]
22 |                 | undefined
23 |     );
24 | 
25 |     return modelData;
26 | }
27 | 
28 | export default useModel;
29 | 


--------------------------------------------------------------------------------
/client/src/hooks/useSystemCalls.ts:
--------------------------------------------------------------------------------
 1 | import { useAccount } from "@starknet-react/core";
 2 | import { useDojoStore } from "../components/Checker";
 3 | import { useDojo } from "./useDojo";
 4 | import { Account } from "starknet";
 5 | 
 6 | export const useSystemCalls = () => {
 7 | 
 8 |     const {
 9 |         setup: { setupWorld },
10 |          account: { account: burner },
11 |     } = useDojo();
12 |     const {account} = useAccount();
13 | 
14 | 
15 |     const createLobby = async () => {
16 |       try {
17 |           const activeAccount = account || burner;
18 |           
19 |           if (!activeAccount) {
20 |               throw new Error('No valid account found');
21 |           }
22 |   
23 |           const createLobby = await (await setupWorld.actions).createLobby(
24 |               activeAccount as Account
25 |           );
26 |           return createLobby;
27 |       } catch (error) {
28 |           throw new Error(`createLobby failed: ${error}`);
29 |       }
30 |   };
31 | 
32 |     const getSessionId= async()=>{
33 |       try{
34 |         const activeAccount = account || burner;
35 | 
36 |         const id= await (await setupWorld.actions).getSessionId((activeAccount as Account));
37 |         console.log(id,'id')
38 |         return id
39 |       } catch(err){
40 |         throw new Error(`getSessionId failed: ${err}`);
41 |       }
42 |     }
43 | 
44 |     return {
45 |       createLobby,
46 |       getSessionId,
47 |     };
48 | };


--------------------------------------------------------------------------------
/client/src/index.css:
--------------------------------------------------------------------------------
1 | @tailwind base;
2 | @tailwind components;
3 | @tailwind utilities;
4 | 


--------------------------------------------------------------------------------
/client/src/main.tsx:
--------------------------------------------------------------------------------
 1 | import { StrictMode } from "react";
 2 | import { createRoot } from "react-dom/client";
 3 | import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
 4 | import "./index.css";
 5 | import { init } from "@dojoengine/sdk";
 6 | import { schema } from "./bindings.ts";
 7 | import { dojoConfig } from "../dojoConfig.ts";
 8 | import { DojoContextProvider } from "./DojoContext.tsx";
 9 | import { setupBurnerManager } from "@dojoengine/create-burner";
10 | import Checker from "./components/Checker.tsx";
11 | import JoinRoom from "./components/JoinRoom.tsx";
12 | import InitGame from "./components/InitGame.tsx";
13 | import CreateGame from "./components/CreateGame.tsx";
14 | import { StarknetProvider } from "./providers/StarknetProvider.tsx";
15 | 
16 | async function main() {
17 |     const sdk = await init<typeof schema>(
18 |         {
19 |             client: {
20 |                 rpcUrl: dojoConfig.rpcUrl,
21 |                 toriiUrl: dojoConfig.toriiUrl,
22 |                 relayUrl: dojoConfig.relayUrl,
23 |                 worldAddress: dojoConfig.manifest.world.address,
24 |             },
25 |             domain: {
26 |                 name: "WORLD_NAME",
27 |                 version: "1.0",
28 |                 chainId: "KATANA",
29 |                 revision: "1",
30 |             },
31 |         },
32 |         schema
33 |     );
34 | 
35 |     createRoot(document.getElementById("root")!).render(
36 |         <StrictMode>
37 |             <Router>
38 |                 <DojoContextProvider
39 |                     burnerManager={await setupBurnerManager(dojoConfig)}
40 |                 >
41 |                     <StarknetProvider>
42 |                         <Routes>
43 |                             <Route path="/" element={<InitGame sdk={sdk} />} />
44 |                             <Route path="/joinroom" element={<JoinRoom sdk={sdk} />} />
45 |                             <Route path="/creategame" element={<CreateGame sdk={sdk} />} />
46 |                             <Route path="/checkers" element={<Checker sdk={sdk} />} />
47 |                         </Routes>
48 |                     </StarknetProvider>
49 |                 </DojoContextProvider>
50 |             </Router>
51 |         </StrictMode>
52 |     );
53 | }
54 | 
55 | main().catch((error) => {
56 |     console.error("Failed to initialize the application:", error);
57 | });


--------------------------------------------------------------------------------
/client/src/models.gen.ts:
--------------------------------------------------------------------------------
  1 | import type { SchemaType } from "@dojoengine/sdk";
  2 | 
  3 | // Type definition for `checkers_marq::models::Counter` struct
  4 | export interface Counter {
  5 | 	fieldOrder: string[];
  6 | 	next_id: number;
  7 | 	game_id: number;
  8 | }
  9 | 
 10 | // Type definition for `checkers_marq::models::CounterValue` struct
 11 | export interface CounterValue {
 12 | 	fieldOrder: string[];
 13 | 	game_id: number;
 14 | }
 15 | 
 16 | // Type definition for `checkers_marq::models::Piece` struct
 17 | export interface Piece {
 18 | 	fieldOrder: string[];
 19 | 	session_id: number;
 20 | 	row: number;
 21 | 	col: number;
 22 | 	player: string;
 23 | 	position: Position;
 24 | 	is_king: boolean;
 25 | 	is_alive: boolean;
 26 | }
 27 | 
 28 | // Type definition for `checkers_marq::models::PieceValue` struct
 29 | export interface PieceValue {
 30 | 	fieldOrder: string[];
 31 | 	player: string;
 32 | 	position: Position;
 33 | 	is_king: boolean;
 34 | 	is_alive: boolean;
 35 | }
 36 | 
 37 | // Type definition for `checkers_marq::models::PlayerValue` struct
 38 | export interface PlayerValue {
 39 | 	fieldOrder: string[];
 40 | 	remaining_pieces: number;
 41 | }
 42 | 
 43 | // Type definition for `checkers_marq::models::Player` struct
 44 | export interface Player {
 45 | 	fieldOrder: string[];
 46 | 	player: string;
 47 | 	remaining_pieces: number;
 48 | }
 49 | 
 50 | // Type definition for `checkers_marq::models::Session` struct
 51 | export interface Session {
 52 | 	fieldOrder: string[];
 53 | 	session_id: number;
 54 | 	player_1: string;
 55 | 	player_2: string;
 56 | 	turn: number;
 57 | 	winner: string;
 58 | 	state: number;
 59 | }
 60 | 
 61 | // Type definition for `checkers_marq::models::SessionValue` struct
 62 | export interface SessionValue {
 63 | 	fieldOrder: string[];
 64 | 	player_1: string;
 65 | 	player_2: string;
 66 | 	turn: number;
 67 | 	winner: string;
 68 | 	state: number;
 69 | }
 70 | 
 71 | // Type definition for `checkers_marq::models::Position` enum
 72 | export enum Position {
 73 | 	None,
 74 | 	Up,
 75 | 	Down,
 76 | }
 77 | 
 78 | export interface DojoStarterSchemaType extends SchemaType {
 79 | 	checkers_marq: {
 80 | 		Counter: Counter,
 81 | 		CounterValue: CounterValue,
 82 | 		Piece: Piece,
 83 | 		PieceValue: PieceValue,
 84 | 		PlayerValue: PlayerValue,
 85 | 		Player: Player,
 86 | 		Session: Session,
 87 | 		SessionValue: SessionValue,
 88 | 		ERC__Balance: ERC__Balance,
 89 | 		ERC__Token: ERC__Token,
 90 | 		ERC__Transfer: ERC__Transfer,
 91 | 	},
 92 | }
 93 | export const schema: DojoStarterSchemaType = {
 94 | 	checkers_marq: {
 95 | 		Counter: {
 96 | 			fieldOrder: ['next_id', 'game_id'],
 97 | 			next_id: 0,
 98 | 			game_id: 0,
 99 | 		},
100 | 		CounterValue: {
101 | 			fieldOrder: ['game_id'],
102 | 			game_id: 0,
103 | 		},
104 | 		Piece: {
105 | 			fieldOrder: ['session_id', 'row', 'col', 'player', 'position', 'is_king', 'is_alive'],
106 | 			session_id: 0,
107 | 			row: 0,
108 | 			col: 0,
109 | 			player: "",
110 | 			position: Position.None,
111 | 			is_king: false,
112 | 			is_alive: false,
113 | 		},
114 | 		PieceValue: {
115 | 			fieldOrder: ['player', 'position', 'is_king', 'is_alive'],
116 | 			player: "",
117 | 			position: Position.None,
118 | 			is_king: false,
119 | 			is_alive: false,
120 | 		},
121 | 		PlayerValue: {
122 | 			fieldOrder: ['remaining_pieces'],
123 | 			remaining_pieces: 0,
124 | 		},
125 | 		Player: {
126 | 			fieldOrder: ['player', 'remaining_pieces'],
127 | 			player: "",
128 | 			remaining_pieces: 0,
129 | 		},
130 | 		Session: {
131 | 			fieldOrder: ['session_id', 'player_1', 'player_2', 'turn', 'winner', 'state'],
132 | 			session_id: 0,
133 | 			player_1: "",
134 | 			player_2: "",
135 | 			turn: 0,
136 | 			winner: "",
137 | 			state: 0,
138 | 		},
139 | 		SessionValue: {
140 | 			fieldOrder: ['player_1', 'player_2', 'turn', 'winner', 'state'],
141 | 			player_1: "",
142 | 			player_2: "",
143 | 			turn: 0,
144 | 			winner: "",
145 | 			state: 0,
146 | 		},
147 | 		ERC__Balance: {
148 | 			fieldOrder: ['balance', 'type', 'tokenmetadata'],
149 | 			balance: '',
150 | 			type: 'ERC20',
151 | 			tokenMetadata: {
152 | 				fieldOrder: ['name', 'symbol', 'tokenId', 'decimals', 'contractAddress'],
153 | 				name: '',
154 | 				symbol: '',
155 | 				tokenId: '',
156 | 				decimals: '',
157 | 				contractAddress: '',
158 | 			},
159 | 		},
160 | 		ERC__Token: {
161 | 			fieldOrder: ['name', 'symbol', 'tokenId', 'decimals', 'contractAddress'],
162 | 			name: '',
163 | 			symbol: '',
164 | 			tokenId: '',
165 | 			decimals: '',
166 | 			contractAddress: '',
167 | 		},
168 | 		ERC__Transfer: {
169 | 			fieldOrder: ['from', 'to', 'amount', 'type', 'executed', 'tokenMetadata'],
170 | 			from: '',
171 | 			to: '',
172 | 			amount: '',
173 | 			type: 'ERC20',
174 | 			executedAt: '',
175 | 			tokenMetadata: {
176 | 				fieldOrder: ['name', 'symbol', 'tokenId', 'decimals', 'contractAddress'],
177 | 				name: '',
178 | 				symbol: '',
179 | 				tokenId: '',
180 | 				decimals: '',
181 | 				contractAddress: '',
182 | 			},
183 | 			transactionHash: '',
184 | 		},
185 | 
186 | 	},
187 | };
188 | // Type definition for ERC__Balance struct
189 | export type ERC__Type = 'ERC20' | 'ERC721';
190 | export interface ERC__Balance {
191 |     fieldOrder: string[];
192 |     balance: string;
193 |     type: string;
194 |     tokenMetadata: ERC__Token;
195 | }
196 | export interface ERC__Token {
197 |     fieldOrder: string[];
198 |     name: string;
199 |     symbol: string;
200 |     tokenId: string;
201 |     decimals: string;
202 |     contractAddress: string;
203 | }
204 | export interface ERC__Transfer {
205 |     fieldOrder: string[];
206 |     from: string;
207 |     to: string;
208 |     amount: string;
209 |     type: string;
210 |     executedAt: string;
211 |     tokenMetadata: ERC__Token;
212 |     transactionHash: string;
213 | }


--------------------------------------------------------------------------------
/client/src/providers/StarknetProvider.tsx:
--------------------------------------------------------------------------------
 1 | 'use client'
 2 | 
 3 | import { StarknetConfig,starkscan } from "@starknet-react/core";
 4 | import { PropsWithChildren } from "react";
 5 | import { sepolia} from "@starknet-react/chains";
 6 | 
 7 | 
 8 | import {ControllerConnector} from "@cartridge/connector";
 9 | import { Connector } from "@starknet-react/core";
10 | import { RpcProvider } from "starknet";
11 | import manifest from "../../../dojo-starter/manifest_slot_1.json";
12 | import { getContractByName } from "@dojoengine/core";
13 | 
14 | 
15 | 
16 | const checkersContract = getContractByName(manifest, "checkers_marq", "actions")?.address;
17 | export const connector = new ControllerConnector({
18 |   policies: [
19 |     {
20 |       target: checkersContract,
21 |       method: "move_piece",
22 |     },
23 |     {
24 |       target: checkersContract,
25 |       method: "create_lobby",
26 |     },
27 |     {
28 |       target: checkersContract,
29 |       method: "join_lobby",
30 |     },
31 |     {
32 |       target: checkersContract,
33 |       method: "spawn",
34 |     },
35 |     {
36 |       target: checkersContract,
37 |       method: "can_choose_piece",
38 |     },
39 |     {
40 |       target: checkersContract,
41 |       method: "get_session_id",
42 |     },
43 |   ],
44 |   rpc: "https://api.cartridge.gg/x/checkers-scaffold/katana",
45 | }) as never as Connector;
46 | 
47 | function provider() {
48 |   return new RpcProvider({
49 |     nodeUrl: "https://api.cartridge.gg/x/checkers-scaffold/katana",
50 |   });
51 | }
52 | 
53 | export function StarknetProvider({ children }: PropsWithChildren) {
54 |   return (
55 |     <StarknetConfig
56 |       autoConnect
57 |       chains={[sepolia]}
58 |       connectors={[connector]}
59 |       explorer={starkscan}
60 |       provider={provider}>
61 |       {children}
62 |     </StarknetConfig>
63 |   );
64 | }
65 | 


--------------------------------------------------------------------------------
/client/src/test-query.ts:
--------------------------------------------------------------------------------
 1 | import { GraphQLClient, gql } from 'graphql-request';
 2 | 
 3 | // Define the GraphQL endpoint
 4 | const endpoint = 'https://api.cartridge.gg/x/checkers/torii/graphql';
 5 | 
 6 | // Create an instance of GraphQLClient
 7 | const graphQLClient = new GraphQLClient(endpoint);
 8 | 
 9 | // Define the query as a string
10 | const query = gql`
11 |   query GetId {
12 |     checkersMarqCounterModels {
13 |       edges {
14 |         node {
15 |           nonce
16 |         }
17 |       }
18 |     }
19 |   }
20 | `;
21 | 
22 | // Define a function to fetch data
23 | export async function fetchData() {
24 |   try {
25 |     // Send the query
26 |     const data = await graphQLClient.request(query);
27 |     // Extract the nonce from the response
28 |     //@ts-ignore
29 |     const hexNonce = data.checkersMarqCounterModels.edges[0].node.nonce;
30 |     // Convert nonce to decimal
31 |     const assignedSessionId = parseInt(hexNonce, 16) - 1;
32 |     console.log('Assigned session id', assignedSessionId);
33 |   } catch (error) {
34 |     console.error('Error fetching data:', error);
35 |   }
36 | }
37 | 


--------------------------------------------------------------------------------
/client/src/vite-env.d.ts:
--------------------------------------------------------------------------------
1 | /// <reference types="vite/client" />
2 | 


--------------------------------------------------------------------------------
/client/tailwind.config.js:
--------------------------------------------------------------------------------
1 | /** @type {import('tailwindcss').Config} */
2 | export default {
3 |     content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
4 |     theme: {
5 |         extend: {},
6 |     },
7 |     plugins: [],
8 | };
9 | 


--------------------------------------------------------------------------------
/client/tsconfig.app.json:
--------------------------------------------------------------------------------
 1 | {
 2 |     "compilerOptions": {
 3 |         "target": "ES2020",
 4 |         "useDefineForClassFields": true,
 5 |         "lib": ["ES2020", "DOM", "DOM.Iterable"],
 6 |         "module": "ESNext",
 7 |         "skipLibCheck": true,
 8 | 
 9 |         /* Bundler mode */
10 |         "moduleResolution": "bundler",
11 |         "allowImportingTsExtensions": true,
12 |         "isolatedModules": true,
13 |         "moduleDetection": "force",
14 |         "noEmit": true,
15 |         "jsx": "react-jsx",
16 | 
17 |         /* Linting */
18 |         "strict": true,
19 |         "noUnusedLocals": true,
20 |         "noUnusedParameters": true,
21 |         "noFallthroughCasesInSwitch": true
22 |     },
23 |     "include": ["src"]
24 | }
25 | 


--------------------------------------------------------------------------------
/client/tsconfig.app.tsbuildinfo:
--------------------------------------------------------------------------------
1 | {"root":["./src/DojoContext.tsx","./src/bindings.ts","./src/contracts.gen.ts","./src/main.tsx","./src/vite-env.d.ts","./src/components/Board.tsx","./src/components/Checker.tsx","./src/components/GameOver.tsx","./src/components/Header.tsx","./src/components/Home.tsx","./src/components/InitGame.tsx","./src/components/Winner.tsx","./src/connector/ControllerButton.tsx","./src/connector/CreateBurner.tsx","./src/hooks/useControllerAccount.tsx","./src/hooks/useDojo.tsx","./src/hooks/useDojoConnect.tsx","./src/hooks/useModel.tsx","./src/hooks/useSystemCalls.ts"],"version":"5.6.3"}


--------------------------------------------------------------------------------
/client/tsconfig.json:
--------------------------------------------------------------------------------
1 | {
2 |     "files": [],
3 |     "references": [
4 |         { "path": "./tsconfig.app.json" },
5 |         { "path": "./tsconfig.node.json" }
6 |     ]
7 | }
8 | 


--------------------------------------------------------------------------------
/client/tsconfig.node.json:
--------------------------------------------------------------------------------
 1 | {
 2 |     "compilerOptions": {
 3 |         "target": "ES2022",
 4 |         "lib": ["ES2023"],
 5 |         "module": "ESNext",
 6 |         "skipLibCheck": true,
 7 | 
 8 |         /* Bundler mode */
 9 |         "moduleResolution": "bundler",
10 |         "allowImportingTsExtensions": true,
11 |         "isolatedModules": true,
12 |         "moduleDetection": "force",
13 |         "noEmit": true,
14 | 
15 |         /* Linting */
16 |         "strict": true,
17 |         "noUnusedLocals": true,
18 |         "noUnusedParameters": true,
19 |         "noFallthroughCasesInSwitch": true
20 |     },
21 |     "include": ["vite.config.ts"]
22 | }
23 | 


--------------------------------------------------------------------------------
/client/tsconfig.node.tsbuildinfo:
--------------------------------------------------------------------------------
1 | {"root":["./vite.config.ts"],"version":"5.6.3"}


--------------------------------------------------------------------------------
/client/vite.config.ts:
--------------------------------------------------------------------------------
 1 | import react from "@vitejs/plugin-react";
 2 | import { defineConfig } from "vite";
 3 | import topLevelAwait from "vite-plugin-top-level-await";
 4 | import wasm from "vite-plugin-wasm";
 5 | import mkcert from "vite-plugin-mkcert";
 6 | //if we import this plugin we can use the controller without ngrok
 7 | 
 8 | // https://vitejs.dev/config/
 9 | export default defineConfig({
10 |     plugins: [react(), wasm(), topLevelAwait(), mkcert()],
11 | });
12 | 


--------------------------------------------------------------------------------